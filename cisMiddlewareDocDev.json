{
    "swagger": "2.0",
    "info": {
        "description": "Explore the developed and updated API specifications.",
        "title": "CIS Middleware API Documentation"
    },
    "host": "localhost:8989",
    "basePath": "/",
    "tags": [
        {
            "name": "Customer",
            "description": "Customer Controller"
        },
        {
            "name": "Document",
            "description": "Document Master Controller"
        },
        {
            "name": "Product",
            "description": "Product Controller"
        },
        {
            "name": "Quotation",
            "description": "Get Product Quotation Controller"
        },
        {
            "name": "User",
            "description": "User Login Controller"
        }
    ],
    "paths": {
        "/api/add-customer": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Add A New Customer",
                "description": "Add a new customer and if successfull return a successfull message otherwise return error code and message.",
                "operationId": "addCustomerUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication Token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "requestVm",
                        "description": "requestVm",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AddCustomerRequestVm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataPack«string»"
                        }
                    },
                    "400": {
                        "description": "Bad request, i.e. The client's request is malformed or contains errors, making it impossible for the server to understand or process the request."
                    },
                    "401": {
                        "description": "Unauthorized, i.e. \t\tThe client's request is missing valid authentication credentials, or the provided credentials are invalid or insufficient to access the requested resource."
                    },
                    "412": {
                        "description": "Precondition failed, i.e. The server received a client request with specific preconditions that were not met."
                    },
                    "415": {
                        "description": "Method not allowed, i.e. The server cannot process the client's request because the provided media type or content format is not supported or acceptable."
                    },
                    "500": {
                        "description": "Internal Server Error, i.e. The server encountered an unexpected error or condition that prevented it from processing the client's request."
                    }
                }
            }
        },
        "/api/add-master-document": {
            "post": {
                "tags": [
                    "Document"
                ],
                "summary": "Save the document",
                "description": "Returns document number and Money Receipt number after save.",
                "operationId": "addMasterDocumentUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer [token]",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "requestVm",
                        "description": "requestVm",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Add Document Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataPackSingle«Add Document Response»"
                        }
                    },
                    "400": {
                        "description": "Bad request, i.e. The client's request is malformed or contains errors, making it impossible for the server to understand or process the request."
                    },
                    "401": {
                        "description": "Unauthorized, i.e. \t\tThe client's request is missing valid authentication credentials, or the provided credentials are invalid or insufficient to access the requested resource."
                    },
                    "412": {
                        "description": "Precondition failed, i.e. The server received a client request with specific preconditions that were not met."
                    },
                    "415": {
                        "description": "Method not allowed, i.e. The server cannot process the client's request because the provided media type or content format is not supported or acceptable."
                    },
                    "500": {
                        "description": "Internal Server Error, i.e. The server encountered an unexpected error or condition that prevented it from processing the client's request."
                    }
                }
            }
        },
        "/api/get-product-list": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get product",
                "description": "Returns the list of the allowed products for showcasing with the product details like features, coverage, exclusions and also pre-requisite data list for getting quotations.",
                "operationId": "productServiceUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication Token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Product Details Response"
                        }
                    },
                    "400": {
                        "description": "Bad request, i.e. The client's request is malformed or contains errors, making it impossible for the server to understand or process the request."
                    },
                    "401": {
                        "description": "Unauthorized, i.e. \t\tThe client's request is missing valid authentication credentials, or the provided credentials are invalid or insufficient to access the requested resource."
                    },
                    "412": {
                        "description": "Precondition failed, i.e. The server received a client request with specific preconditions that were not met."
                    },
                    "415": {
                        "description": "Method not allowed, i.e. The server cannot process the client's request because the provided media type or content format is not supported or acceptable."
                    },
                    "500": {
                        "description": "Internal Server Error, i.e. The server encountered an unexpected error or condition that prevented it from processing the client's request."
                    }
                }
            }
        },
        "/api/get-quotation": {
            "get": {
                "tags": [
                    "Quotation"
                ],
                "summary": "Get Quotation",
                "description": "Returns specific product's quotation.",
                "operationId": "getQuotationUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication Token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "requestVm",
                        "description": "requestVm",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Get Quotation Request Body"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Get Quotation Response"
                        }
                    },
                    "400": {
                        "description": "Bad request, i.e. The client's request is malformed or contains errors, making it impossible for the server to understand or process the request."
                    },
                    "401": {
                        "description": "Unauthorized, i.e. \t\tThe client's request is missing valid authentication credentials, or the provided credentials are invalid or insufficient to access the requested resource."
                    },
                    "412": {
                        "description": "Precondition failed, i.e. The server received a client request with specific preconditions that were not met."
                    },
                    "415": {
                        "description": "Method not allowed, i.e. The server cannot process the client's request because the provided media type or content format is not supported or acceptable."
                    },
                    "500": {
                        "description": "Internal Server Error, i.e. The server encountered an unexpected error or condition that prevented it from processing the client's request."
                    }
                }
            }
        },
        "/api/get-quotation-pre-requisite": {
            "get": {
                "tags": [
                    "Quotation"
                ],
                "summary": "Get Quotation Pre Requisite",
                "description": "Returns the list of quotation pre requsite.",
                "operationId": "getQuotationPreRequisiteUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication Token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataPackSingle«Quotation Pre Requsite Response»"
                        }
                    },
                    "400": {
                        "description": "Bad request, i.e. The client's request is malformed or contains errors, making it impossible for the server to understand or process the request."
                    },
                    "401": {
                        "description": "Unauthorized, i.e. \t\tThe client's request is missing valid authentication credentials, or the provided credentials are invalid or insufficient to access the requested resource."
                    },
                    "412": {
                        "description": "Precondition failed, i.e. The server received a client request with specific preconditions that were not met."
                    },
                    "415": {
                        "description": "Method not allowed, i.e. The server cannot process the client's request because the provided media type or content format is not supported or acceptable."
                    },
                    "500": {
                        "description": "Internal Server Error, i.e. The server encountered an unexpected error or condition that prevented it from processing the client's request."
                    }
                }
            }
        },
        "/api/refresh-auth-token": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Refresh token",
                "description": "Returns a new token when the existing token is expires.",
                "operationId": "refrestAuthTokenUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication Token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User Refresh Token Response"
                        }
                    },
                    "400": {
                        "description": "Bad request, i.e. The client's request is malformed or contains errors, making it impossible for the server to understand or process the request."
                    },
                    "401": {
                        "description": "Unauthorized, i.e. \t\tThe client's request is missing valid authentication credentials, or the provided credentials are invalid or insufficient to access the requested resource."
                    },
                    "412": {
                        "description": "Precondition failed, i.e. The server received a client request with specific preconditions that were not met."
                    },
                    "415": {
                        "description": "Method not allowed, i.e. The server cannot process the client's request because the provided media type or content format is not supported or acceptable."
                    },
                    "500": {
                        "description": "Internal Server Error, i.e. The server encountered an unexpected error or condition that prevented it from processing the client's request."
                    }
                }
            }
        },
        "/api/search-customer": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Search Customer by search parameteres",
                "description": "Returns customer by given customerType, GroupCode, searchText",
                "operationId": "searchCustomerUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication Token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "requestVm",
                        "description": "requestVm",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Search Customer Request Body"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataPackSingle«Customer Response»"
                        }
                    },
                    "400": {
                        "description": "Bad request, i.e. The client's request is malformed or contains errors, making it impossible for the server to understand or process the request."
                    },
                    "401": {
                        "description": "Unauthorized, i.e. \t\tThe client's request is missing valid authentication credentials, or the provided credentials are invalid or insufficient to access the requested resource."
                    },
                    "412": {
                        "description": "Precondition failed, i.e. The server received a client request with specific preconditions that were not met."
                    },
                    "415": {
                        "description": "Method not allowed, i.e. The server cannot process the client's request because the provided media type or content format is not supported or acceptable."
                    },
                    "500": {
                        "description": "Internal Server Error, i.e. The server encountered an unexpected error or condition that prevented it from processing the client's request."
                    }
                }
            }
        },
        "/api/user-authentication": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User Authentication",
                "description": "Returns the access token if a valid user found according to given users credentials.",
                "operationId": "userAuthenticationUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestVm",
                        "description": "requestVm",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User Authentication Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User Authentication Response"
                        }
                    },
                    "400": {
                        "description": "Bad request, i.e. The client's request is malformed or contains errors, making it impossible for the server to understand or process the request."
                    },
                    "401": {
                        "description": "Unauthorized, i.e. \t\tThe client's request is missing valid authentication credentials, or the provided credentials are invalid or insufficient to access the requested resource."
                    },
                    "412": {
                        "description": "Precondition failed, i.e. The server received a client request with specific preconditions that were not met."
                    },
                    "415": {
                        "description": "Method not allowed, i.e. The server cannot process the client's request because the provided media type or content format is not supported or acceptable."
                    },
                    "500": {
                        "description": "Internal Server Error, i.e. The server encountered an unexpected error or condition that prevented it from processing the client's request."
                    }
                }
            }
        }
    },
    "definitions": {
        "Add Document Request": {
            "type": "object",
            "required": [
                "customerInfo",
                "loginUserInfo"
            ],
            "properties": {
                "bnh": {
                    "description": "Business & Holidays related details",
                    "$ref": "#/definitions/BNHDetails"
                },
                "commonInfo": {
                    "description": "Common Information for MR",
                    "$ref": "#/definitions/CommonInfo"
                },
                "customerInfo": {
                    "description": "Customer Information",
                    "$ref": "#/definitions/CustomerInfo"
                },
                "ens": {
                    "description": "Employment and Studies related details",
                    "$ref": "#/definitions/ENSDetails"
                },
                "forDataSave": {
                    "type": "object",
                    "description": "Exact quotation response will need to send in this object"
                },
                "loginUserInfo": {
                    "description": "Login User Information",
                    "$ref": "#/definitions/LoginUserInfo"
                },
                "mtr": {
                    "description": "Motor product related details",
                    "$ref": "#/definitions/MTRDetails"
                },
                "nib": {
                    "description": "Nibedita product related details",
                    "$ref": "#/definitions/NIBDetails"
                },
                "pac": {
                    "description": "Personal Accident product related details",
                    "$ref": "#/definitions/PACDetails"
                },
                "ppa": {
                    "description": "People's Personal Accident product related details",
                    "$ref": "#/definitions/PPADetails"
                }
            },
            "title": "Add Document Request"
        },
        "Add Document Response": {
            "type": "object",
            "properties": {
                "customerId": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100,
                    "description": "Customer ID"
                },
                "mrNumber": {
                    "type": "string",
                    "example": 100001,
                    "description": "MR Number"
                },
                "policyNumber": {
                    "type": "string",
                    "example": "GDI/AHO/09/2023/MTR/T/600003",
                    "description": "Policy Number"
                }
            },
            "title": "Add Document Response"
        },
        "AddCustomerRequestVm": {
            "type": "object",
            "properties": {
                "customerInfo": {
                    "description": "Customer information",
                    "$ref": "#/definitions/CustomerInfo"
                },
                "loginUserInfo": {
                    "description": "Login user information",
                    "$ref": "#/definitions/LoginUserInfo"
                }
            },
            "title": "AddCustomerRequestVm"
        },
        "BNHDetails": {
            "type": "object",
            "properties": {
                "coveredLimit": {
                    "type": "string",
                    "description": "Covered Limit"
                },
                "custGender": {
                    "type": "string",
                    "description": "Customer Gender"
                },
                "custOccupation": {
                    "type": "string",
                    "description": "Customer Occupation"
                },
                "custPasspostNo": {
                    "type": "string",
                    "description": "Customer Passport Number"
                },
                "destCountryAddress": {
                    "type": "string",
                    "description": "Destination Country Address"
                },
                "doctorId": {
                    "type": "string",
                    "description": "Doctor ID"
                },
                "employerAddress": {
                    "type": "string",
                    "description": "Employer Address"
                },
                "employerName": {
                    "type": "string",
                    "description": "Employer Name"
                },
                "insuredOccupation": {
                    "type": "string",
                    "description": "Insured Occupation"
                },
                "interestInsured": {
                    "type": "string",
                    "description": "Interest Insured"
                },
                "medicalNonMedical": {
                    "type": "string",
                    "description": "Medical or Non-Medical"
                },
                "nameOfTheUsualPhysician": {
                    "type": "string",
                    "description": "Name of the Usual Physician"
                },
                "officeTelephoneNo": {
                    "type": "string",
                    "description": "Office Telephone Number"
                },
                "participant": {
                    "type": "string",
                    "description": "Participant"
                },
                "physicianTelephoneNoHome": {
                    "type": "string",
                    "description": "Physician Telephone Number (Home)"
                },
                "physicianTelephoneNoOffice": {
                    "type": "string",
                    "description": "Physician Telephone Number (Office)"
                },
                "planName": {
                    "type": "string",
                    "description": "Plan Name"
                },
                "planType": {
                    "type": "string",
                    "description": "Plan Type"
                },
                "reInsuredCountry": {
                    "type": "string",
                    "description": "Re-Insured Country"
                },
                "visaType": {
                    "type": "string",
                    "description": "Visa Type"
                }
            },
            "title": "BNHDetails"
        },
        "Bnh": {
            "type": "object",
            "properties": {
                "coveredLimit": {
                    "type": "integer",
                    "format": "int32",
                    "example": 125000,
                    "description": "Covered limit"
                },
                "dayStay": {
                    "type": "integer",
                    "format": "int32",
                    "example": 160,
                    "description": "Number of days for stay"
                },
                "placeVisitCode": {
                    "type": "string",
                    "example": "C",
                    "description": "Place visit code"
                },
                "policyDuration": {
                    "type": "string",
                    "example": "short",
                    "description": "Policy duration (short or full)"
                }
            },
            "title": "Bnh"
        },
        "BnhDetails": {
            "type": "object",
            "properties": {
                "medicalTypeList": {
                    "type": "array",
                    "description": "List of medical types for BNH",
                    "items": {
                        "$ref": "#/definitions/MedicalType"
                    }
                },
                "placeVisitList": {
                    "type": "array",
                    "description": "List of place visit options for BNH",
                    "items": {
                        "$ref": "#/definitions/PlaceVisit"
                    }
                },
                "planTypeList": {
                    "type": "array",
                    "description": "List of plan types for BNH",
                    "items": {
                        "$ref": "#/definitions/PlanType"
                    }
                }
            },
            "title": "BnhDetails"
        },
        "CommonInfo": {
            "type": "object",
            "properties": {
                "customerBin": {
                    "type": "string",
                    "example": 10909090,
                    "description": "Customer's BIN number"
                },
                "customerDob": {
                    "type": "string",
                    "example": "2000-01-01",
                    "description": "Customer's date of birth"
                },
                "customerGroupCode": {
                    "type": "string",
                    "example": "UNILIVER",
                    "description": "Customer group code"
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32",
                    "example": 10,
                    "description": "Customer ID for existing customers"
                },
                "customerMobile": {
                    "type": "string",
                    "example": "01989989989",
                    "description": "Customer's mobile number"
                },
                "customerNid": {
                    "type": "string",
                    "example": "BHBHBHBHBH",
                    "description": "Customer's national ID"
                },
                "customerTin": {
                    "type": "string",
                    "example": "TIN-JGHGHGHGH",
                    "description": "Customer's TIN number"
                },
                "customerType": {
                    "type": "string",
                    "example": "BUSINESS",
                    "description": "Type of customer (BUSINESS or PERSONAL)"
                },
                "documentValidFrom": {
                    "type": "string",
                    "example": "2023-08-09",
                    "description": "Validity start date of the document"
                },
                "documentValidTo": {
                    "type": "string",
                    "example": "2024-08-08",
                    "description": "Validity end date of the document"
                },
                "existingCustomer": {
                    "type": "boolean"
                },
                "sumInsured": {
                    "type": "integer",
                    "format": "int32",
                    "example": 100000,
                    "description": "Sum insured amount"
                }
            },
            "title": "CommonInfo"
        },
        "Customer Response": {
            "type": "object",
            "properties": {
                "bin": {
                    "type": "string",
                    "example": 123456789,
                    "description": "BIN (Business Identification Number) of the customer"
                },
                "birthRegNo": {
                    "type": "string",
                    "example": "B9876543",
                    "description": "Birth registration number of the customer"
                },
                "companyRegAuthority": {
                    "type": "string",
                    "example": "Government",
                    "description": "Company registration authority of the customer"
                },
                "companyType": {
                    "type": "string",
                    "example": "Corporation",
                    "description": "Type of the company"
                },
                "contactAddress": {
                    "type": "string",
                    "example": "789 Third St, City, Country",
                    "description": "Contact address for the customer"
                },
                "contactPerson": {
                    "type": "string",
                    "example": "John Doe",
                    "description": "Contact person for the customer"
                },
                "customerGroupCode": {
                    "type": "string",
                    "example": "CG123",
                    "description": "Customer group code"
                },
                "customerType": {
                    "type": "string",
                    "example": "Individual",
                    "description": "Type of the customer"
                },
                "dateOfBirth": {
                    "type": "string",
                    "example": "1990-01-01",
                    "description": "Date of birth of the customer"
                },
                "email": {
                    "type": "string",
                    "example": "test@example.com",
                    "description": "Email address of the customer"
                },
                "fatherName": {
                    "type": "string",
                    "example": "John Smith",
                    "description": "Father's name of the customer"
                },
                "firstName": {
                    "type": "string",
                    "example": "Test First Name",
                    "description": "First Name Of The Customer"
                },
                "gender": {
                    "type": "string",
                    "example": "Male",
                    "description": "Gender of the customer"
                },
                "id": {
                    "type": "string",
                    "example": 123456,
                    "description": "Auto increment id"
                },
                "incomeSource": {
                    "type": "string",
                    "example": "Employment",
                    "description": "Source of customer's income"
                },
                "lastName": {
                    "type": "string",
                    "example": "Test Last Name",
                    "description": "Last Name Of The Customer"
                },
                "middleName": {
                    "type": "string",
                    "example": "Test Middle Name",
                    "description": "Middle Name Of The Customer"
                },
                "mobileNo": {
                    "type": "string",
                    "example": 1234567890,
                    "description": "Auto increment id"
                },
                "motherName": {
                    "type": "string",
                    "example": "Mary Smith",
                    "description": "Mother's name of the customer"
                },
                "name": {
                    "type": "string",
                    "example": "Test Customer Name",
                    "description": "Name of the customer"
                },
                "nationality": {
                    "type": "string",
                    "example": "US",
                    "description": "Nationality of the customer"
                },
                "nid": {
                    "type": "string",
                    "example": 1234567890,
                    "description": "National ID number of the customer"
                },
                "officeAddress": {
                    "type": "string",
                    "example": "101 Business Ave, City, Country",
                    "description": "Office address of the customer"
                },
                "officeContactNumber": {
                    "type": "string",
                    "example": "+1234567890",
                    "description": "Office contact number of the customer"
                },
                "passportExpireDate": {
                    "type": "string",
                    "example": "2025-01-01",
                    "description": "Passport expiry date of the customer"
                },
                "passportNo": {
                    "type": "string",
                    "example": "A1234567",
                    "description": "Passport number of the customer"
                },
                "permanentAddress": {
                    "type": "string",
                    "example": "456 Second St, City, Country",
                    "description": "Permanent address of the customer"
                },
                "presentAddress": {
                    "type": "string",
                    "example": "123 Main St, City, Country",
                    "description": "Present address of the customer"
                },
                "regIssueDate": {
                    "type": "string",
                    "example": "2022-01-15",
                    "description": "Registration issue date"
                },
                "spouseName": {
                    "type": "string",
                    "example": "Jane Smith",
                    "description": "Spouse's name of the customer"
                },
                "tin": {
                    "type": "string",
                    "example": 987654321,
                    "description": "TIN (Tax Identification Number) of the customer"
                },
                "tradeLicenceNo": {
                    "type": "string",
                    "example": "T987654321",
                    "description": "Trade license number of the customer"
                }
            },
            "title": "Customer Response"
        },
        "CustomerInfo": {
            "type": "object",
            "properties": {
                "bin": {
                    "type": "string",
                    "description": "BIN (Business Identification Number). Mandatory for business customers."
                },
                "birthRegNo": {
                    "type": "string",
                    "description": "Birth registration number (optional)."
                },
                "companyRegAuthority": {
                    "type": "string",
                    "description": "Company registration authority (optional)."
                },
                "companyType": {
                    "type": "string",
                    "description": "Type of company (e.g., REGISTERED). Required for business customers."
                },
                "contactAddress": {
                    "type": "string",
                    "description": "Contact address (optional)."
                },
                "contactPerson": {
                    "type": "string",
                    "description": "Contact person (optional)."
                },
                "customerGroupCode": {
                    "type": "string",
                    "description": "Customer group code (e.g., UNILIVER). Required for business customers."
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Customer ID. It will depend on whether it's a new customer or an existing one. customerId will given for existing customer otherwise it will be null"
                },
                "customerType": {
                    "type": "string",
                    "description": "Type of customer (e.g., BUSINESS). Required for business customers."
                },
                "dateOfBirth": {
                    "type": "string",
                    "description": "Date of birth of the customer. Mandatory for personal customers. Required for new PERSONAL customer."
                },
                "email": {
                    "type": "string",
                    "description": "Email address of the customer. Mandatory for personal customers. Required for new customer."
                },
                "fatherName": {
                    "type": "string",
                    "description": "Father's name. Mandatory for personal customers."
                },
                "firstName": {
                    "type": "string",
                    "description": "First name of the customer. Mandatory for personal customers. Required for new PERSONAL customer. "
                },
                "gender": {
                    "type": "string",
                    "description": "Gender of the customer. Mandatory for personal customers. Required for new PERSONAL customer."
                },
                "incomeSource": {
                    "type": "string",
                    "description": "Source of income (optional)."
                },
                "insuredAddress": {
                    "type": "string",
                    "description": "Insured address. Mandatory for both existing and new customers. By default it can be customers permanent address. User can change the address as it will be consider as mailing address"
                },
                "lastName": {
                    "type": "string",
                    "description": "Last name of the customer (optional)."
                },
                "mobileNo": {
                    "type": "string",
                    "description": "Mobile number of the customer. Mandatory for both personal and business customers. Required for new customer."
                },
                "motherName": {
                    "type": "string",
                    "description": "Mother's name. Mandatory for personal customers."
                },
                "name": {
                    "type": "string",
                    "description": "Full name of the customer. Mandatory for both personal and business customers. Required for new customer."
                },
                "nationality": {
                    "type": "string",
                    "description": "Nationality of the customer (optional)."
                },
                "nid": {
                    "type": "string",
                    "description": "NID (National ID) (optional)."
                },
                "officeAddress": {
                    "type": "string",
                    "description": "Office address (optional)."
                },
                "officeContactNumber": {
                    "type": "string",
                    "description": "Office contact number (optional)."
                },
                "passportExpireDate": {
                    "type": "string",
                    "description": "Passport expiration date (if applicable). Mandatory when passport number (passportNo) is given."
                },
                "passportNo": {
                    "type": "string",
                    "description": "Passport number (if available). Mandatory when passport number is given."
                },
                "permanentAddress": {
                    "type": "string",
                    "description": "Permanent address of the customer. Required for both personal and business customers."
                },
                "presentAddress": {
                    "type": "string",
                    "description": "Present address of the customer (optional)."
                },
                "regIssueDate": {
                    "type": "string",
                    "description": "Registration issue date (optional)."
                },
                "spouseName": {
                    "type": "string",
                    "description": "Spouse's name. Mandatory for personal customers."
                },
                "tin": {
                    "type": "string",
                    "description": "TIN (Taxpayer Identification Number) (optional)."
                },
                "tradeLicenceNo": {
                    "type": "string",
                    "description": "Trade license number (optional)."
                }
            },
            "title": "CustomerInfo"
        },
        "DataPackSingle«Add Document Response»": {
            "type": "object",
            "properties": {
                "correlationID": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/Add Document Response"
                },
                "messageID": {
                    "type": "string"
                },
                "remarks": {
                    "$ref": "#/definitions/DataRemarks"
                },
                "result": {
                    "type": "boolean"
                },
                "timestamp": {
                    "type": "string"
                }
            },
            "title": "DataPackSingle«Add Document Response»"
        },
        "DataPackSingle«Customer Response»": {
            "type": "object",
            "properties": {
                "correlationID": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/Customer Response"
                },
                "messageID": {
                    "type": "string"
                },
                "remarks": {
                    "$ref": "#/definitions/DataRemarks"
                },
                "result": {
                    "type": "boolean"
                },
                "timestamp": {
                    "type": "string"
                }
            },
            "title": "DataPackSingle«Customer Response»"
        },
        "DataPackSingle«Quotation Pre Requsite Response»": {
            "type": "object",
            "properties": {
                "correlationID": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/Quotation Pre Requsite Response"
                },
                "messageID": {
                    "type": "string"
                },
                "remarks": {
                    "$ref": "#/definitions/DataRemarks"
                },
                "result": {
                    "type": "boolean"
                },
                "timestamp": {
                    "type": "string"
                }
            },
            "title": "DataPackSingle«Quotation Pre Requsite Response»"
        },
        "DataPack«string»": {
            "type": "object",
            "properties": {
                "correlationID": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "messageID": {
                    "type": "string"
                },
                "remarks": {
                    "$ref": "#/definitions/DataRemarks"
                },
                "result": {
                    "type": "boolean"
                },
                "timestamp": {
                    "type": "string"
                }
            },
            "title": "DataPack«string»"
        },
        "DataRemarks": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "success": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "title": "DataRemarks"
        },
        "ENSDetails": {
            "type": "object",
            "properties": {
                "coveredLimit": {
                    "type": "string",
                    "description": "Covered Limit"
                },
                "custGender": {
                    "type": "string",
                    "description": "Customer Gender"
                },
                "custOccupation": {
                    "type": "string",
                    "description": "Customer Occupation"
                },
                "custPasspostNo": {
                    "type": "string",
                    "description": "Customer Passport Number"
                },
                "destCountryAddress": {
                    "type": "string",
                    "description": "Destination Country Address"
                },
                "doctorId": {
                    "type": "string",
                    "description": "Doctor ID"
                },
                "employerAddress": {
                    "type": "string",
                    "description": "Employer Address"
                },
                "employerName": {
                    "type": "string",
                    "description": "Employer Name"
                },
                "insuredOccupation": {
                    "type": "string",
                    "description": "Insured Occupation"
                },
                "interestInsured": {
                    "type": "string",
                    "description": "Interest Insured"
                },
                "medicalNonMedical": {
                    "type": "string",
                    "description": "Medical or Non-Medical"
                },
                "nameOfTheUsualPhysician": {
                    "type": "string",
                    "description": "Name of the Usual Physician"
                },
                "officeTelephoneNo": {
                    "type": "string",
                    "description": "Office Telephone Number"
                },
                "participant": {
                    "type": "string",
                    "description": "Participant"
                },
                "physicianTelephoneNoHome": {
                    "type": "string",
                    "description": "Physician Telephone Number (Home)"
                },
                "physicianTelephoneNoOffice": {
                    "type": "string",
                    "description": "Physician Telephone Number (Office)"
                },
                "planName": {
                    "type": "string",
                    "description": "Plan Name"
                },
                "planType": {
                    "type": "string",
                    "description": "Plan Type"
                },
                "reInsuredCountry": {
                    "type": "string",
                    "description": "Re-Insured Country"
                },
                "visaType": {
                    "type": "string",
                    "description": "Visa Type"
                }
            },
            "title": "ENSDetails"
        },
        "Ens": {
            "type": "object",
            "properties": {
                "conversionRateUsdToBdt": {
                    "type": "integer",
                    "format": "int32",
                    "example": 90,
                    "description": "Conversion rate from USD to BDT"
                },
                "coveredLimit": {
                    "type": "integer",
                    "format": "int32",
                    "example": 125000,
                    "description": "Covered limit"
                },
                "dayStay": {
                    "type": "integer",
                    "format": "int32",
                    "example": 0,
                    "description": "Number of days for stay"
                },
                "ensType": {
                    "type": "string",
                    "example": "Employment",
                    "description": "ENS type"
                },
                "monthStay": {
                    "type": "integer",
                    "format": "int32",
                    "example": 8,
                    "description": "Number of months for stay"
                },
                "numberOfChild": {
                    "type": "integer",
                    "format": "int32",
                    "example": 0,
                    "description": "Number of children"
                },
                "numberOfPerson": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1,
                    "description": "Number of persons"
                },
                "placeVisitCode": {
                    "type": "string",
                    "example": "B",
                    "description": "Place visit code"
                },
                "stampDutyType": {
                    "type": "string",
                    "example": "Recoverable",
                    "description": "Stamp duty type (Recoverable or Non-Recoverable)"
                }
            },
            "title": "Ens"
        },
        "EnsDetails": {
            "type": "object",
            "properties": {
                "ensTypeList": {
                    "type": "array",
                    "description": "List of ENS types",
                    "items": {
                        "$ref": "#/definitions/EnsType"
                    }
                },
                "medicalTypeList": {
                    "type": "array",
                    "description": "List of medical types",
                    "items": {
                        "$ref": "#/definitions/MedicalType"
                    }
                },
                "placeVisitList": {
                    "type": "array",
                    "description": "List of place visit options",
                    "items": {
                        "$ref": "#/definitions/PlaceVisit"
                    }
                },
                "planTypeList": {
                    "type": "array",
                    "description": "List of plan types",
                    "items": {
                        "$ref": "#/definitions/PlanType"
                    }
                }
            },
            "title": "EnsDetails"
        },
        "EnsType": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "ENS type name"
                },
                "value": {
                    "type": "string",
                    "description": "ENS type value"
                }
            },
            "title": "EnsType"
        },
        "ForDataSave": {
            "type": "object",
            "title": "ForDataSave"
        },
        "Get Quotation Request Body": {
            "type": "object",
            "properties": {
                "commonInfo": {
                    "description": "Common information",
                    "$ref": "#/definitions/CommonInfo"
                },
                "productCode": {
                    "type": "string",
                    "example": "NIB",
                    "description": "Product code"
                },
                "productSpecificInfo": {
                    "description": "Product-specific information",
                    "$ref": "#/definitions/ProductSpecificInfo"
                }
            },
            "title": "Get Quotation Request Body"
        },
        "Get Quotation Response": {
            "type": "object",
            "properties": {
                "discountAmount": {
                    "type": "number",
                    "format": "double",
                    "example": 0,
                    "description": "Discount amount"
                },
                "forDataSave": {
                    "description": "Data for saving purposes",
                    "$ref": "#/definitions/ForDataSave"
                },
                "grossPremium": {
                    "type": "number",
                    "format": "double",
                    "example": 10485,
                    "description": "Gross premium amount"
                },
                "netPremium": {
                    "type": "number",
                    "format": "double",
                    "example": 9100,
                    "description": "Net premium amount"
                },
                "policyDuration": {
                    "description": "Policy duration details",
                    "$ref": "#/definitions/PolicyDuration"
                },
                "policyValidFrom": {
                    "type": "string",
                    "example": "2023-10-24",
                    "description": "Policy valid from date"
                },
                "policyValidTo": {
                    "type": "string",
                    "example": "2024-10-23",
                    "description": "Policy valid to date"
                },
                "stampAmount": {
                    "type": "number",
                    "format": "double",
                    "example": 20,
                    "description": "Stamp amount"
                },
                "vatAmount": {
                    "type": "number",
                    "format": "double",
                    "example": 1365,
                    "description": "VAT amount"
                }
            },
            "title": "Get Quotation Response"
        },
        "LoginUserInfo": {
            "type": "object",
            "required": [
                "employeeId",
                "name",
                "role"
            ],
            "properties": {
                "branchCode": {
                    "type": "string",
                    "description": "Branch Code"
                },
                "clientCode": {
                    "type": "string",
                    "description": "Client Code"
                },
                "designation": {
                    "type": "string",
                    "description": "Designation"
                },
                "employeeId": {
                    "type": "string",
                    "description": "Employee ID"
                },
                "mobile": {
                    "type": "string",
                    "description": "Mobile Number"
                },
                "name": {
                    "type": "string",
                    "description": "Name"
                },
                "role": {
                    "type": "string",
                    "example": "Manager, RM, Sales",
                    "description": "Role"
                }
            },
            "title": "LoginUserInfo"
        },
        "MTRDetails": {
            "type": "object",
            "properties": {
                "companyOrModelName": {
                    "type": "string",
                    "description": "Company or Model Name"
                },
                "fitnessExpiryDate": {
                    "type": "string",
                    "description": "Fitness Expiry Date"
                },
                "manufactureYear": {
                    "type": "string",
                    "description": "Manufacture Year"
                },
                "manufacturer": {
                    "type": "string",
                    "description": "Manufacturer"
                },
                "motorEngineAndChassisNumber": {
                    "type": "string",
                    "description": "Motor Engine and Chassis Number"
                },
                "motorMakeAndBodyType": {
                    "type": "string",
                    "description": "Motor Make and Body Type"
                },
                "motorModelNumber": {
                    "type": "string",
                    "description": "Motor Model Number"
                },
                "motorTermsOfUseId": {
                    "type": "string",
                    "description": "Motor Terms of Use ID"
                },
                "nameOfRegistrationAuthority": {
                    "type": "string",
                    "description": "Name of Registration Authority"
                },
                "taxToken": {
                    "type": "string",
                    "description": "Tax Token"
                }
            },
            "title": "MTRDetails"
        },
        "MedicalType": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Medical type name"
                },
                "value": {
                    "type": "string",
                    "description": "Medical type value"
                }
            },
            "title": "MedicalType"
        },
        "MotorCCName": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "CC Name"
                },
                "value": {
                    "type": "string",
                    "description": "CC Value"
                }
            },
            "title": "MotorCCName"
        },
        "MotorPlanType": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Plan Type Name"
                },
                "value": {
                    "type": "string",
                    "description": "Plan Type Value"
                }
            },
            "title": "MotorPlanType"
        },
        "MotorVehicle": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Vehicle Description"
                },
                "vehicleName": {
                    "type": "string",
                    "description": "Vehicle Name"
                }
            },
            "title": "MotorVehicle"
        },
        "Mtr": {
            "type": "object",
            "properties": {
                "avlsDiscount": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether AVLs discount is available"
                },
                "comprehensiveRate": {
                    "type": "integer",
                    "format": "int32",
                    "example": 0,
                    "description": "Comprehensive rate"
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32",
                    "example": 70734,
                    "description": "Customer ID"
                },
                "exclusionPerilList": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "fitnessExpiryDate": {
                    "type": "string",
                    "example": "2023-07-19",
                    "description": "Fitness expiry date"
                },
                "loadingRate": {
                    "type": "integer",
                    "format": "int32",
                    "example": 0,
                    "description": "Loading rate"
                },
                "lumpSumAmount": {
                    "type": "integer",
                    "format": "int32",
                    "example": 0,
                    "description": "Lump sum amount"
                },
                "manufactureYear": {
                    "type": "string",
                    "example": 2019,
                    "description": "Manufacture year"
                },
                "motorTermsOfUseId": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1,
                    "description": "Motor terms of use ID"
                },
                "mtrCcTon": {
                    "type": "string",
                    "example": "CC",
                    "description": "MTR CC ton type (CC or Ton)"
                },
                "mtrCcTonValue": {
                    "type": "integer",
                    "format": "int32",
                    "example": 200,
                    "description": "MTR CC ton value"
                },
                "mtrConductorAmount": {
                    "type": "integer",
                    "format": "int32",
                    "example": 0,
                    "description": "Conductor amount"
                },
                "mtrConductorRate": {
                    "type": "integer",
                    "format": "int32",
                    "example": 0,
                    "description": "Conductor rate"
                },
                "mtrDriverTimesMultiply": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1,
                    "description": "Multiplier for driver count"
                },
                "mtrGuideAmount": {
                    "type": "integer",
                    "format": "int32",
                    "example": 0,
                    "description": "Guide amount"
                },
                "mtrGuideRate": {
                    "type": "integer",
                    "format": "int32",
                    "example": 0,
                    "description": "Guide rate"
                },
                "mtrHelperTimesMultiply": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1,
                    "description": "Multiplier for helper count"
                },
                "mtrNoOfConductor": {
                    "type": "integer",
                    "format": "int32",
                    "example": 0,
                    "description": "Number of conductors"
                },
                "mtrNoOfDriver": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1,
                    "description": "Number of drivers"
                },
                "mtrNoOfGuide": {
                    "type": "integer",
                    "format": "int32",
                    "example": 0,
                    "description": "Number of guides"
                },
                "mtrNoOfHelper": {
                    "type": "integer",
                    "format": "int32",
                    "example": 0,
                    "description": "Number of helpers"
                },
                "mtrNoOfPassenger": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1,
                    "description": "Number of passengers"
                },
                "mtrPassengerTimesMultiply": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1,
                    "description": "Multiplier for passenger count"
                },
                "mtrPlanName": {
                    "type": "string",
                    "example": "Comprehensive",
                    "description": "MTR plan name"
                },
                "mtrVehicleId": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1,
                    "description": "MTR vehicle ID"
                },
                "mtrVehicleType": {
                    "type": "string",
                    "example": "Private",
                    "description": "MTR vehicle type"
                },
                "namedDriver": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether named driver is available"
                },
                "ncbRate": {
                    "type": "integer",
                    "format": "int32",
                    "example": 0,
                    "description": "No Claim Bonus rate"
                },
                "oppositePurposeUseLoading": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether loading is applicable for opposite purpose use"
                },
                "policyDuration": {
                    "type": "string",
                    "example": "full",
                    "description": "Policy duration (short or full)"
                },
                "stampAmount": {
                    "type": "integer",
                    "format": "int32",
                    "example": 500,
                    "description": "Stamp amount"
                },
                "stampDutyType": {
                    "type": "string",
                    "example": "Non-Recoverable",
                    "description": "Stamp duty type (Recoverable or Non-Recoverable)"
                },
                "sumInsured": {
                    "type": "integer",
                    "format": "int32",
                    "example": 2000000,
                    "description": "Sum insured amount"
                },
                "taxFreeVehicle": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether the vehicle is tax-free"
                },
                "taxToken": {
                    "type": "string",
                    "example": 3425345,
                    "description": "Tax token number"
                },
                "techometerVehicle": {
                    "type": "boolean",
                    "example": true,
                    "description": "Whether the vehicle has a tachometer"
                },
                "totalDays": {
                    "type": "integer",
                    "format": "int32",
                    "example": 365,
                    "description": "Total days for policy"
                },
                "vatRate": {
                    "type": "integer",
                    "format": "int32",
                    "example": 15,
                    "description": "VAT rate"
                },
                "vehicleRegistrationNumber": {
                    "type": "string",
                    "example": 323425,
                    "description": "Vehicle registration number"
                }
            },
            "title": "Mtr"
        },
        "MtrDetails": {
            "type": "object",
            "properties": {
                "motorCCNames": {
                    "type": "array",
                    "description": "List of motor CC names",
                    "items": {
                        "$ref": "#/definitions/MotorCCName"
                    }
                },
                "motorPlanTypes": {
                    "type": "array",
                    "description": "List of motor plan types",
                    "items": {
                        "$ref": "#/definitions/MotorPlanType"
                    }
                },
                "mtrPerilExclusion": {
                    "type": "array",
                    "description": "List of MTR peril exclusions",
                    "items": {
                        "$ref": "#/definitions/MtrPerilExclusion"
                    }
                },
                "mtrVehicleList": {
                    "type": "array",
                    "description": "List of MTR vehicle details",
                    "items": {
                        "$ref": "#/definitions/MtrVehicle"
                    }
                },
                "vehicleTypes": {
                    "type": "array",
                    "description": "List of vehicle types",
                    "items": {
                        "$ref": "#/definitions/VehicleType"
                    }
                }
            },
            "title": "MtrDetails"
        },
        "MtrPerilExclusion": {
            "type": "object",
            "properties": {
                "classCode": {
                    "type": "string",
                    "description": "Class Code"
                },
                "deptCode": {
                    "type": "string",
                    "description": "Department Code"
                },
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Peril ID"
                },
                "perilCode": {
                    "type": "string",
                    "description": "Peril Code"
                },
                "perilName": {
                    "type": "string",
                    "description": "Peril Name"
                }
            },
            "title": "MtrPerilExclusion"
        },
        "MtrProduct": {
            "type": "object",
            "properties": {
                "motorCCNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MotorCCName"
                    }
                },
                "motorPlanTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MotorPlanType"
                    }
                },
                "mtrPerilExclusion": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MtrPerilExclusion"
                    }
                },
                "mtrVehicleList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MotorVehicle"
                    }
                },
                "vehicleTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VehicleType"
                    }
                }
            },
            "title": "MtrProduct"
        },
        "MtrVehicle": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Vehicle description"
                },
                "vehicleName": {
                    "type": "string",
                    "description": "Vehicle name"
                }
            },
            "title": "MtrVehicle"
        },
        "NIBDetails": {
            "type": "object",
            "properties": {
                "construction": {
                    "type": "string",
                    "description": "Construction"
                },
                "nomineeDetails": {
                    "type": "array",
                    "description": "Nominee Details",
                    "items": {
                        "$ref": "#/definitions/NomineeDetails"
                    }
                },
                "occupation": {
                    "type": "string",
                    "description": "Occupation"
                }
            },
            "title": "NIBDetails"
        },
        "NibProduct": {
            "type": "object",
            "properties": {
                "productCode": {
                    "type": "string",
                    "description": "Product code"
                },
                "productName": {
                    "type": "string",
                    "description": "Product name"
                },
                "sumInsuredList": {
                    "type": "array",
                    "description": "List of sum insured values",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "title": "NibProduct"
        },
        "NomineeDetails": {
            "type": "object",
            "required": [
                "nomineeAddress",
                "nomineeDateOfBirth",
                "nomineeEmail",
                "nomineeMobile",
                "nomineeName",
                "nomineeNid",
                "nomineeRelation",
                "nomineeSharePct"
            ],
            "properties": {
                "nomineeAddress": {
                    "type": "string",
                    "example": "123 Main St, City",
                    "description": "Nominee Address"
                },
                "nomineeDateOfBirth": {
                    "type": "string",
                    "example": "2023-12-25",
                    "description": "Nominee Date of Birth"
                },
                "nomineeEmail": {
                    "type": "string",
                    "example": "nominee@example.com",
                    "description": "Nominee Email"
                },
                "nomineeMobile": {
                    "type": "string",
                    "example": "0123456789",
                    "description": "Nominee Mobile Number"
                },
                "nomineeName": {
                    "type": "string",
                    "example": "John Doe",
                    "description": "Nominee Name"
                },
                "nomineeNid": {
                    "type": "string",
                    "example": 1234567890,
                    "description": "Nominee NID"
                },
                "nomineeRelation": {
                    "type": "string",
                    "example": "Spouse",
                    "description": "Nominee Relation"
                },
                "nomineeSharePct": {
                    "type": "integer",
                    "format": "int32",
                    "example": 100,
                    "description": "Nominee Share Percentage"
                }
            },
            "title": "NomineeDetails"
        },
        "PACDetails": {
            "type": "object",
            "properties": {
                "construction": {
                    "type": "string",
                    "description": "Construction"
                },
                "nomineeDetails": {
                    "type": "array",
                    "description": "Nominee Details",
                    "items": {
                        "$ref": "#/definitions/NomineeDetails"
                    }
                },
                "occupation": {
                    "type": "string",
                    "description": "Occupation"
                }
            },
            "title": "PACDetails"
        },
        "PPADetails": {
            "type": "object",
            "properties": {
                "construction": {
                    "type": "string",
                    "description": "Construction"
                },
                "nomineeDetails": {
                    "type": "array",
                    "description": "Nominee Details",
                    "items": {
                        "$ref": "#/definitions/NomineeDetails"
                    }
                },
                "occupation": {
                    "type": "string",
                    "description": "Occupation"
                }
            },
            "title": "PPADetails"
        },
        "Pac": {
            "type": "object",
            "properties": {
                "pacClassTypeCode": {
                    "type": "string",
                    "example": "PAC123",
                    "description": "PAC class type code"
                },
                "pacCoverTypeCode": {
                    "type": "string",
                    "example": "COVER456",
                    "description": "PAC cover type code"
                }
            },
            "title": "Pac"
        },
        "PacClassDetails": {
            "type": "object",
            "properties": {
                "classCode": {
                    "type": "string",
                    "description": "Class Code"
                },
                "className": {
                    "type": "string",
                    "description": "Class Name"
                },
                "pacOccupationList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "title": "PacClassDetails"
        },
        "PacCoverTypeDetails": {
            "type": "object",
            "properties": {
                "coverTypeCode": {
                    "type": "string",
                    "description": "Cover Type Code"
                },
                "coverTypeName": {
                    "type": "string",
                    "description": "Cover Type Name"
                }
            },
            "title": "PacCoverTypeDetails"
        },
        "PacDetails": {
            "type": "object",
            "properties": {
                "pacClassDetailsList": {
                    "type": "array",
                    "description": "List of PAC class details",
                    "items": {
                        "$ref": "#/definitions/PacClassDetails"
                    }
                },
                "pacCoverTypeDetailsList": {
                    "type": "array",
                    "description": "List of PAC cover type details",
                    "items": {
                        "$ref": "#/definitions/PacCoverTypeDetails"
                    }
                }
            },
            "title": "PacDetails"
        },
        "PacProduct": {
            "type": "object",
            "properties": {
                "pacClassDetailsList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PacClassDetails"
                    }
                },
                "pacCoverTypeDetailsList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PacCoverTypeDetails"
                    }
                }
            },
            "title": "PacProduct"
        },
        "PlaceVisit": {
            "type": "object",
            "properties": {
                "placeVisit": {
                    "type": "string",
                    "description": "Place Visit"
                },
                "placeVisitCode": {
                    "type": "string",
                    "description": "Place Visit Code"
                }
            },
            "title": "PlaceVisit"
        },
        "PlanType": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Plan type name"
                },
                "value": {
                    "type": "string",
                    "description": "Plan type value"
                }
            },
            "title": "PlanType"
        },
        "PolicyDuration": {
            "type": "object",
            "properties": {
                "day": {
                    "type": "integer",
                    "format": "int32",
                    "example": 365,
                    "description": "Number of days"
                },
                "month": {
                    "type": "integer",
                    "format": "int32",
                    "example": 12,
                    "description": "Number of months"
                },
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1,
                    "description": "Number of years"
                },
                "yearMonthDay": {
                    "type": "string",
                    "example": "year: 1, month: 12, day: 365",
                    "description": "Formatted duration"
                }
            },
            "title": "PolicyDuration"
        },
        "PpaDetails": {
            "type": "object",
            "title": "PpaDetails"
        },
        "PpaProduct": {
            "type": "object",
            "title": "PpaProduct"
        },
        "Product Details Response": {
            "type": "object",
            "properties": {
                "getQuotationPrerequisite": {
                    "$ref": "#/definitions/getQuotationPrerequisite"
                },
                "productList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/productList"
                    }
                }
            },
            "title": "Product Details Response"
        },
        "ProductSpecificInfo": {
            "type": "object",
            "properties": {
                "bnh": {
                    "description": "BNH information",
                    "$ref": "#/definitions/Bnh"
                },
                "ens": {
                    "description": "ENS information",
                    "$ref": "#/definitions/Ens"
                },
                "mtr": {
                    "description": "MTR information",
                    "$ref": "#/definitions/Mtr"
                },
                "pac": {
                    "description": "PAC information",
                    "$ref": "#/definitions/Pac"
                }
            },
            "title": "ProductSpecificInfo"
        },
        "Quotation Pre Requsite Response": {
            "type": "object",
            "properties": {
                "bnh": {
                    "example": {
                        "placeVisitList": [
                            {
                                "placeVisit": "Hospital A",
                                "placeVisitCode": "A"
                            }
                        ],
                        "planTypeList": [
                            {
                                "name": "Plan A",
                                "value": "A"
                            }
                        ],
                        "medicalTypeList": [
                            {
                                "name": "Medical",
                                "value": "Medical"
                            }
                        ]
                    },
                    "description": "BNH details",
                    "$ref": "#/definitions/BnhDetails"
                },
                "ens": {
                    "example": {
                        "placeVisitList": [
                            {
                                "placeVisit": "Plan \"C\" : For Schengen Countries and Worldwide Excluding USA and Canada",
                                "placeVisitCode": "A"
                            }
                        ],
                        "planTypeList": [
                            {
                                "name": "A",
                                "value": "A"
                            }
                        ],
                        "medicalTypeList": [
                            {
                                "name": "Medical",
                                "value": "Medical"
                            }
                        ],
                        "ensTypeList": [
                            {
                                "name": "Study",
                                "value": "Study"
                            }
                        ]
                    },
                    "description": "ENS details",
                    "$ref": "#/definitions/EnsDetails"
                },
                "mtr": {
                    "example": {
                        "motorPlanTypes": [
                            {
                                "name": "Plan A",
                                "value": "A"
                            }
                        ],
                        "vehicleTypes": [
                            {
                                "name": "Car",
                                "value": "A"
                            }
                        ],
                        "motorCCNames": [
                            {
                                "name": "CC1",
                                "value": "A"
                            }
                        ],
                        "mtrVehicleList": [
                            {
                                "vehicleName": "Vehicle A",
                                "description": "Description A"
                            }
                        ],
                        "mtrPerilExclusion": [
                            {
                                "id": 1,
                                "deptCode": "DeptA",
                                "classCode": "ClassA",
                                "perilCode": "PerilA",
                                "perilName": "Peril NameA"
                            }
                        ]
                    },
                    "description": "MTR details",
                    "$ref": "#/definitions/MtrDetails"
                },
                "nib": {
                    "type": "array",
                    "example": [
                        {
                            "productCode": "NIBEDITA_ECO",
                            "productName": "NIBEDITA ECO",
                            "sumInsuredList": [
                                50000,
                                100000,
                                150000,
                                200000
                            ]
                        },
                        {
                            "productCode": "NIBEDITA_REGULAR",
                            "productName": "NIBEDITA REGULAR",
                            "sumInsuredList": [
                                100000,
                                200000,
                                300000,
                                400000,
                                500000,
                                600000,
                                700000,
                                800000,
                                900000,
                                1000000
                            ]
                        },
                        {
                            "productCode": "NIBEDITA_PLUS",
                            "productName": "NIBEDITA PLUS",
                            "sumInsuredList": [
                                500000,
                                1000000,
                                2000000,
                                3000000,
                                4000000,
                                5000000
                            ]
                        }
                    ],
                    "description": "NIB products",
                    "items": {
                        "$ref": "#/definitions/NibProduct"
                    }
                },
                "pac": {
                    "example": {
                        "pacClassDetailsList": [
                            {
                                "classCode": "A",
                                "className": "Plan - A",
                                "pacOccupationList": [
                                    "Accountants",
                                    "Bankers",
                                    "Barristers",
                                    "Medical Practitioners",
                                    "Mercantile Assistants",
                                    "Engaged solely in Executive",
                                    "Administrative",
                                    "Clerical duties"
                                ]
                            }
                        ],
                        "pacCoverTypeDetailsList": [
                            {
                                "coverTypeCode": "A",
                                "coverTypeName": "TABLE-A- Personal Accidental death permanent & temporary disablement including Medical Expenses."
                            }
                        ]
                    },
                    "description": "PAC details",
                    "$ref": "#/definitions/PacDetails"
                },
                "ppa": {
                    "description": "PPA details",
                    "$ref": "#/definitions/PpaDetails"
                }
            },
            "title": "Quotation Pre Requsite Response"
        },
        "Search Customer Request Body": {
            "type": "object",
            "required": [
                "customerGroupCode",
                "customerType",
                "searchText",
                "searchType"
            ],
            "properties": {
                "customerGroupCode": {
                    "type": "string",
                    "example": "UNILIVER, ISPAHANI",
                    "description": "Customer Group Code (if customerType is business then have to provide group code)"
                },
                "customerType": {
                    "type": "string",
                    "example": "Personal, Business",
                    "description": "Customer Type"
                },
                "searchText": {
                    "type": "string",
                    "example": "Mobile: 01711111111, NID: 987654321",
                    "description": "Keyword for search customer based on the selected searchType"
                },
                "searchType": {
                    "type": "string",
                    "example": "Mobile Number, BIN, TIN, NID",
                    "description": "Customer Search By Specific Selected Criteria"
                }
            },
            "title": "Search Customer Request Body"
        },
        "SubProduct": {
            "type": "object",
            "properties": {
                "ageLimitInfo": {
                    "type": "string",
                    "example": "Age limit is 16 years to 65 years",
                    "description": "Sub-Product Age Limit Information"
                },
                "coverage": {
                    "type": "string",
                    "example": "<ul _ngcontent-bcn-c140><li _ngcontent-bcn-c140> Accidental Death </li>",
                    "description": "Sub-Product Coverage"
                },
                "description": {
                    "type": "string",
                    "example": "<p>Providing affordable comprehensive insurance coverage to females. Ensuring best Insurance Service in Urban and Rural area</p>",
                    "description": "Sub-Product Description"
                },
                "exclusion": {
                    "type": "string",
                    "example": "<ul _ngcontent-bcn-c140><li _ngcontent-bcn-c140> Pre-existing disability. </li>",
                    "description": "Sub-Product Exclusion"
                },
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Sub-Product ID"
                },
                "keyfeature": {
                    "type": "string",
                    "example": "<ul><li> </li><li> Ensuring best available insurance facilities </li><li>",
                    "description": "Sub-Product Key Features"
                },
                "productCode": {
                    "type": "string",
                    "description": "Sub-Product Code"
                },
                "productInfo": {
                    "type": "string",
                    "example": "NIBEDITA ECO",
                    "description": "Sub-Product Information"
                },
                "productName": {
                    "type": "string",
                    "description": "Sub-Product Name"
                },
                "sumInsuredInfo": {
                    "type": "string",
                    "example": "BDT 50,000 to BDT 2,00,000",
                    "description": "Sub-Product Sum Insured Information"
                },
                "title": {
                    "type": "string",
                    "example": "<h2>Comprehensive Insurance Policy For Women</h2>",
                    "description": "Sub-Product Title"
                }
            },
            "title": "SubProduct"
        },
        "User Authentication Request": {
            "type": "object",
            "required": [
                "password",
                "platform",
                "source",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": 12345678,
                    "description": "User's password"
                },
                "platform": {
                    "type": "string",
                    "description": "Platform from which the request is made (e.g., WEB, APP)",
                    "enum": [
                        "APP",
                        "WEB"
                    ]
                },
                "source": {
                    "type": "string",
                    "description": "Source of authentication (e.g., EBL, ROBI, BRAC)",
                    "enum": [
                        "BRAC",
                        "EBL",
                        "ROBI"
                    ]
                },
                "username": {
                    "type": "string",
                    "example": 19255,
                    "description": "User's username"
                }
            },
            "title": "User Authentication Request"
        },
        "User Authentication Response": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "example": "eyJraWQiOiJlOWNjZDMyYy02OTllLTQ1MjItYjE1MC03MjM5ODRkODkzNDMi",
                    "description": "Access Token"
                },
                "error": {
                    "type": "array",
                    "description": "List of errors",
                    "items": {
                        "type": "string"
                    }
                },
                "expiresIn": {
                    "type": "integer",
                    "format": "int32",
                    "example": 35999,
                    "description": "Time in seconds until the token expires"
                },
                "idToken": {
                    "type": "string",
                    "example": "eyJraWQiOiJlOWNjZDMyYcFgU6PAHo3-9RkODkzNDMi",
                    "description": "ID Token"
                },
                "refreshToken": {
                    "type": "string",
                    "example": "3Lp8hM4I3iBZtyqVK7Lt4_DGtO1D3pd6Cryq1dzT44S5jTPNxhiE1ErPTQxg60or0vZAPhJYGtafSsv05keSgYcWryCUHGCfzlQ_1caPrNO_ixaLlgXhAPtQypMvTTHD",
                    "description": "Refresh Token"
                },
                "scope": {
                    "type": "string",
                    "description": "Scope"
                },
                "tokenType": {
                    "type": "string",
                    "example": "Bearer",
                    "description": "Token Type"
                }
            },
            "title": "User Authentication Response"
        },
        "User Refresh Token Response": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "example": "eyJraWQiOiJlOWNjZDMyYy02OTllLTQ1MjItYjE1MC03MjM5ODRkODkzNDMi",
                    "description": "Access Token"
                },
                "error": {
                    "type": "array",
                    "description": "List of errors",
                    "items": {
                        "type": "string"
                    }
                },
                "expiresIn": {
                    "type": "integer",
                    "format": "int32",
                    "example": 35999,
                    "description": "Time in seconds until the token expires"
                },
                "idToken": {
                    "type": "string",
                    "example": "eyJraWQiOiJlOWNjZDMyYcFgU6PAHo3-9RkODkzNDMi",
                    "description": "ID Token"
                },
                "refreshToken": {
                    "type": "string",
                    "example": "3Lp8hM4I3iBZtyqVK7Lt4_DGtO1D3pd6Cryq1dzT44S5jTPNxhiE1ErPTQxg60or0vZAPhJYGtafSsv05keSgYcWryCUHGCfzlQ_1caPrNO_ixaLlgXhAPtQypMvTTHD",
                    "description": "Refresh Token"
                },
                "scope": {
                    "type": "string",
                    "description": "Scope"
                },
                "tokenType": {
                    "type": "string",
                    "example": "Bearer",
                    "description": "Token Type"
                }
            },
            "title": "User Refresh Token Response"
        },
        "VehicleType": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Vehicle Type Name"
                },
                "value": {
                    "type": "string",
                    "description": "Vehicle Type Value"
                }
            },
            "title": "VehicleType"
        },
        "getQuotationPrerequisite": {
            "type": "object",
            "properties": {
                "bnh": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PlaceVisit"
                    }
                },
                "ens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PlaceVisit"
                    }
                },
                "mtr": {
                    "description": "MTR motor plan types",
                    "$ref": "#/definitions/MtrProduct"
                },
                "nib": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/nib"
                    }
                },
                "pac": {
                    "description": "PAC products and class details",
                    "$ref": "#/definitions/PacProduct"
                },
                "ppa": {
                    "description": "PPA details",
                    "$ref": "#/definitions/PpaProduct"
                }
            },
            "title": "getQuotationPrerequisite"
        },
        "nib": {
            "type": "object",
            "properties": {
                "productCode": {
                    "type": "string",
                    "description": "Product Code"
                },
                "productName": {
                    "type": "string",
                    "description": "Product Name"
                },
                "sumInsuredList": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "title": "nib"
        },
        "productList": {
            "type": "object",
            "properties": {
                "ageLimitInfo": {
                    "type": "string",
                    "example": "Age limit is 16 years to 65 years",
                    "description": "Age Limit Information"
                },
                "coverage": {
                    "type": "string",
                    "example": "<ul _ngcontent-bcn-c140><li _ngcontent-bcn-c140> Accidental Death </li>",
                    "description": "Coverage"
                },
                "description": {
                    "type": "string",
                    "example": "<p>Providing affordable comprehensive insurance coverage to females. Ensuring best Insurance Service in Urban and Rural area</p>",
                    "description": "Product Description"
                },
                "exclusion": {
                    "type": "string",
                    "example": "<ul _ngcontent-bcn-c140><li _ngcontent-bcn-c140> Pre-existing disability. </li>",
                    "description": "Exclusion"
                },
                "hasSubProduct": {
                    "type": "boolean",
                    "description": "Whether the product has sub-products"
                },
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Product ID"
                },
                "keyfeature": {
                    "type": "string",
                    "example": "<ul><li> </li><li> Ensuring best available insurance facilities </li><li>",
                    "description": "Key Features"
                },
                "productCode": {
                    "type": "string",
                    "description": "Product Code"
                },
                "productInfo": {
                    "type": "string",
                    "example": "NIBEDITA",
                    "description": "Product Information"
                },
                "productName": {
                    "type": "string",
                    "description": "Product Name"
                },
                "subProductList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SubProduct"
                    }
                },
                "sumInsuredInfo": {
                    "type": "string",
                    "example": "BDT 50,000 to BDT 2,00,000",
                    "description": "Sum Insured Information"
                },
                "title": {
                    "type": "string",
                    "example": "<h2>Comprehensive Insurance Policy For Women</h2>",
                    "description": "Product Title"
                }
            },
            "title": "productList"
        }
    }
}