{
    "openapi": "3.0.3",
    "info": {
        "title": "CIS Middleware Documentation",
        "description": "The purpose of this document is to describe data communication between Aggregator/Partner and GDIC CIS system",
        "contact": {
            "name": "GDIC IT",
            "url": "https://green-delta.com",
            "email": "itdev@green-delta.com"
        },
        "license": {},
        "version": "1.0.1"
    },
    "servers": [
        {
            "url": "https://localhost:7878",
            "description": "Inferred Url"
        }
    ],
    "tags": [
        {
            "name": "Customer",
            "description": "Customer Controller"
        },
        {
            "name": "Document",
            "description": "Document Master Controller"
        },
        {
            "name": "Money Receipt",
            "description": "Money Receipt Controller"
        },
        {
            "name": "Product",
            "description": "Product Controller"
        },
        {
            "name": "Quotation",
            "description": "Get Product Quotation Controller"
        },
        {
            "name": "User",
            "description": "User Login Controller"
        }
    ],
    "paths": {
        "/api/add-customer": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Add A New Customer",
                "description": "Add a new customer and if successfull return a successfull message otherwise return error code and message.",
                "operationId": "addCustomerUsingPOST",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication Token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer Information"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Data Object«string»"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, i.e. The client's request is malformed or contains errors, making it impossible for the server to understand or process the request."
                    },
                    "401": {
                        "description": "Unauthorized, i.e. \t\tThe client's request is missing valid authentication credentials, or the provided credentials are invalid or insufficient to access the requested resource."
                    },
                    "412": {
                        "description": "Precondition failed, i.e. The server received a client request with specific preconditions that were not met."
                    },
                    "415": {
                        "description": "Method not allowed, i.e. The server cannot process the client's request because the provided media type or content format is not supported or acceptable."
                    },
                    "500": {
                        "description": "Internal Server Error, i.e. The server encountered an unexpected error or condition that prevented it from processing the client's request."
                    }
                }
            }
        },
        "/api/search-customer": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Search Customer by search parameteres",
                "description": "Returns available customer by given parameters ex:(customerType, GroupCode, searchText etc.), when customer not found returns empty.",
                "operationId": "searchCustomerUsingPOST",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer [token]",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Search Customer Request Body"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Data Object«Customer Response Body»"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, i.e. The client's request is malformed or contains errors, making it impossible for the server to understand or process the request."
                    },
                    "401": {
                        "description": "Unauthorized, i.e. \t\tThe client's request is missing valid authentication credentials, or the provided credentials are invalid or insufficient to access the requested resource."
                    },
                    "412": {
                        "description": "Precondition failed, i.e. The server received a client request with specific preconditions that were not met."
                    },
                    "415": {
                        "description": "Method not allowed, i.e. The server cannot process the client's request because the provided media type or content format is not supported or acceptable."
                    },
                    "500": {
                        "description": "Internal Server Error, i.e. The server encountered an unexpected error or condition that prevented it from processing the client's request."
                    }
                }
            }
        },
        "/api/add-master-document": {
            "post": {
                "tags": [
                    "Document"
                ],
                "summary": "Save document",
                "description": "Returns id, document number, Money Receipt number and PDF URL after save.",
                "operationId": "addMasterDocumentTestUsingPOST_1",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer [token]",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "data"
                                ],
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "string",
                                        "description": "The request body of 'add-master-document-dummy' API contains specific JSON format for 'data' parameter. It encapsulates information necessary for the API to process the request and produce the desired outcome. The 'data' parameter will contain specific JSON of the schema 'Add Document Request', Otherwise this will throw error or will not save the document."
                                    },
                                    "files": {
                                        "type": "array",
                                        "description": "This is an optional field to upload raw file/files (Max file size: 2MB). Format ex: PDF, JPG, PNG etc ",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                }
                            },
                            "encoding": {
                                "data": {
                                    "contentType": "text/plain"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Data Object«Save Master Document Response»"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, i.e. The client's request is malformed or contains errors, making it impossible for the server to understand or process the request."
                    },
                    "401": {
                        "description": "Unauthorized, i.e. \t\tThe client's request is missing valid authentication credentials, or the provided credentials are invalid or insufficient to access the requested resource."
                    },
                    "412": {
                        "description": "Precondition failed, i.e. The server received a client request with specific preconditions that were not met."
                    },
                    "415": {
                        "description": "Method not allowed, i.e. The server cannot process the client's request because the provided media type or content format is not supported or acceptable."
                    },
                    "500": {
                        "description": "Internal Server Error, i.e. The server encountered an unexpected error or condition that prevented it from processing the client's request."
                    }
                }
            }
        },
        "/api/add-master-document-dummy": {
            "post": {
                "tags": [
                    "Document"
                ],
                "summary": "Save document dummy",
                "description": "This is a dummy API only for showing the request body of 'add-master-document' - 'data' parameter.It doesn't do anything functional activity through CIS MIDDLEWARE.",
                "operationId": "addMasterDocumentTestUsingPOST",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer [token]",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Add Document Request"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Add Document Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Data Object«Save Master Document Response»"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, i.e. The client's request is malformed or contains errors, making it impossible for the server to understand or process the request."
                    },
                    "401": {
                        "description": "Unauthorized, i.e. \t\tThe client's request is missing valid authentication credentials, or the provided credentials are invalid or insufficient to access the requested resource."
                    },
                    "412": {
                        "description": "Precondition failed, i.e. The server received a client request with specific preconditions that were not met."
                    },
                    "415": {
                        "description": "Method not allowed, i.e. The server cannot process the client's request because the provided media type or content format is not supported or acceptable."
                    },
                    "500": {
                        "description": "Internal Server Error, i.e. The server encountered an unexpected error or condition that prevented it from processing the client's request."
                    }
                }
            }
        },
        "/api/get-document-by-document-number": {
            "post": {
                "tags": [
                    "Document"
                ],
                "summary": "Get Document Details by document Number",
                "description": "Returns the list of Document pre requsite.",
                "operationId": "getDocumentByDocumentNumberUsingPOST",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication Token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocNoVm"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Data Object Single«UnderwritingResponseVm»"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, i.e. The client's request is malformed or contains errors, making it impossible for the server to understand or process the request."
                    },
                    "401": {
                        "description": "Unauthorized, i.e. \t\tThe client's request is missing valid authentication credentials, or the provided credentials are invalid or insufficient to access the requested resource."
                    },
                    "412": {
                        "description": "Precondition failed, i.e. The server received a client request with specific preconditions that were not met."
                    },
                    "415": {
                        "description": "Method not allowed, i.e. The server cannot process the client's request because the provided media type or content format is not supported or acceptable."
                    },
                    "500": {
                        "description": "Internal Server Error, i.e. The server encountered an unexpected error or condition that prevented it from processing the client's request."
                    }
                }
            }
        },
        "/api/save-document-pre-requisite": {
            "get": {
                "tags": [
                    "Document"
                ],
                "summary": "Save Document Pre Requisite",
                "description": "After receiving a quotation, if a customer wishes to purchase the policy, certain input is required from the customer. This API, when called, dynamically populates the pre-required data necessary for policy purchase. The pre-requisite data is specific to the product and must be provided in the subsequent save API call to complete the purchase process.",
                "operationId": "getDocumentPreRequisiteUsingGET",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication Token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Data Object Single«Quotation Prerequsite Response»"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, i.e. The client's request is malformed or contains errors, making it impossible for the server to understand or process the request."
                    },
                    "401": {
                        "description": "Unauthorized, i.e. \t\tThe client's request is missing valid authentication credentials, or the provided credentials are invalid or insufficient to access the requested resource."
                    },
                    "412": {
                        "description": "Precondition failed, i.e. The server received a client request with specific preconditions that were not met."
                    },
                    "415": {
                        "description": "Method not allowed, i.e. The server cannot process the client's request because the provided media type or content format is not supported or acceptable."
                    },
                    "500": {
                        "description": "Internal Server Error, i.e. The server encountered an unexpected error or condition that prevented it from processing the client's request."
                    }
                }
            }
        },
        "/api/search-master-document-with-pagination": {
            "post": {
                "tags": [
                    "Document"
                ],
                "summary": "Get Document Details by search text",
                "description": "Returns the list of Document by search text.",
                "operationId": "searchMasterDocumentWithPaginationForMiddlewareUsingPOST",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication Token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "paged",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "sort.sorted",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "sort.unsorted",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "unpaged",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MiddlewareSearchDocVm"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Data Object Single«SearchMasterDocumentResponse»"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, i.e. The client's request is malformed or contains errors, making it impossible for the server to understand or process the request."
                    },
                    "401": {
                        "description": "Unauthorized, i.e. \t\tThe client's request is missing valid authentication credentials, or the provided credentials are invalid or insufficient to access the requested resource."
                    },
                    "412": {
                        "description": "Precondition failed, i.e. The server received a client request with specific preconditions that were not met."
                    },
                    "415": {
                        "description": "Method not allowed, i.e. The server cannot process the client's request because the provided media type or content format is not supported or acceptable."
                    },
                    "500": {
                        "description": "Internal Server Error, i.e. The server encountered an unexpected error or condition that prevented it from processing the client's request."
                    }
                }
            }
        },
        "/api/get-quotation": {
            "post": {
                "tags": [
                    "Quotation"
                ],
                "summary": "Get Quotation",
                "description": "Returns specific product's quotation",
                "operationId": "getQuotationUsingPOST",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer [token]",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Get Quotation Request Body"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Data Object Single«Get Quotation Response»"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, i.e. The client's request is malformed or contains errors, making it impossible for the server to understand or process the request."
                    },
                    "401": {
                        "description": "Unauthorized, i.e. \t\tThe client's request is missing valid authentication credentials, or the provided credentials are invalid or insufficient to access the requested resource."
                    },
                    "412": {
                        "description": "Precondition failed, i.e. The server received a client request with specific preconditions that were not met."
                    },
                    "415": {
                        "description": "Method not allowed, i.e. The server cannot process the client's request because the provided media type or content format is not supported or acceptable."
                    },
                    "500": {
                        "description": "Internal Server Error, i.e. The server encountered an unexpected error or condition that prevented it from processing the client's request."
                    }
                }
            }
        },
        "/api/get-quotation-pre-requisite": {
            "get": {
                "tags": [
                    "Quotation"
                ],
                "summary": "Get Quotation Pre Requisite",
                "description": "Returns the list of quotation pre-requsite",
                "operationId": "getQuotationPreRequisiteUsingGET",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication Token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Data Object Single«Quotation Prerequsite Response»"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, i.e. The client's request is malformed or contains errors, making it impossible for the server to understand or process the request."
                    },
                    "401": {
                        "description": "Unauthorized, i.e. \t\tThe client's request is missing valid authentication credentials, or the provided credentials are invalid or insufficient to access the requested resource."
                    },
                    "412": {
                        "description": "Precondition failed, i.e. The server received a client request with specific preconditions that were not met."
                    },
                    "415": {
                        "description": "Method not allowed, i.e. The server cannot process the client's request because the provided media type or content format is not supported or acceptable."
                    },
                    "500": {
                        "description": "Internal Server Error, i.e. The server encountered an unexpected error or condition that prevented it from processing the client's request."
                    }
                }
            }
        },
        "/api/get-money-receipt-by-mr-number": {
            "get": {
                "tags": [
                    "Money Receipt"
                ],
                "summary": "Get Money Receipt Details by MR Number",
                "description": "Returns the list of Money Receipt Details by MR Number.",
                "operationId": "getMoneyReceiptDetailsByMrNumberUsingGET",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication Token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "mrNumber",
                        "in": "query",
                        "description": "mrNumber",
                        "required": true,
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Data Object Single«AccMoneyReceiptVm»"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, i.e. The client's request is malformed or contains errors, making it impossible for the server to understand or process the request."
                    },
                    "401": {
                        "description": "Unauthorized, i.e. \t\tThe client's request is missing valid authentication credentials, or the provided credentials are invalid or insufficient to access the requested resource."
                    },
                    "412": {
                        "description": "Precondition failed, i.e. The server received a client request with specific preconditions that were not met."
                    },
                    "415": {
                        "description": "Method not allowed, i.e. The server cannot process the client's request because the provided media type or content format is not supported or acceptable."
                    },
                    "500": {
                        "description": "Internal Server Error, i.e. The server encountered an unexpected error or condition that prevented it from processing the client's request."
                    }
                }
            }
        },
        "/api/get-product-list": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get product",
                "description": "Returns the list of the allowed products for showcasing with the product details like features, coverage, exclusions and also pre-requisite data list for getting quotations.",
                "operationId": "getProductListUsingGET",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authentication Token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Data Object Single«Get Product List Response»"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, i.e. The client's request is malformed or contains errors, making it impossible for the server to understand or process the request."
                    },
                    "401": {
                        "description": "Unauthorized, i.e. \t\tThe client's request is missing valid authentication credentials, or the provided credentials are invalid or insufficient to access the requested resource."
                    },
                    "412": {
                        "description": "Precondition failed, i.e. The server received a client request with specific preconditions that were not met."
                    },
                    "415": {
                        "description": "Method not allowed, i.e. The server cannot process the client's request because the provided media type or content format is not supported or acceptable."
                    },
                    "500": {
                        "description": "Internal Server Error, i.e. The server encountered an unexpected error or condition that prevented it from processing the client's request."
                    }
                }
            }
        },
        "/api/refresh-auth-token": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Refresh token",
                "description": "\"Refresh Token\" is a crucial operation that facilitates prolonged user sessions. It allows users to obtain a new access token without re-entering their credentials. This operation takes a valid refresh token as input and, if authenticated, issues a fresh access token, maintaining the user's authenticated state. By seamlessly refreshing tokens, this operation enhances security and user experience by minimizing the need for frequent logins while ensuring continuous access to protected resources.",
                "operationId": "refrestAuthTokenUsingGET",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer [token]",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User Authentication Response After Successfull Authentication"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, i.e. The client's request is malformed or contains errors, making it impossible for the server to understand or process the request."
                    },
                    "401": {
                        "description": "Unauthorized, i.e. \t\tThe client's request is missing valid authentication credentials, or the provided credentials are invalid or insufficient to access the requested resource."
                    },
                    "412": {
                        "description": "Precondition failed, i.e. The server received a client request with specific preconditions that were not met."
                    },
                    "415": {
                        "description": "Method not allowed, i.e. The server cannot process the client's request because the provided media type or content format is not supported or acceptable."
                    },
                    "500": {
                        "description": "Internal Server Error, i.e. The server encountered an unexpected error or condition that prevented it from processing the client's request."
                    }
                }
            }
        },
        "/api/user-authentication": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User Authentication",
                "description": "\"User Authentication\" operation serves to validate user credentials, ensuring the security of the authentication process. Upon successful verification, the operation generates an access token. This token acts as a secure authentication mechanism for subsequent requests, facilitating authorized access to protected resources within the application or API",
                "operationId": "userAuthenticationUsingPOST",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User Authentication Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User Authentication Response After Successfull Authentication"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, i.e. The client's request is malformed or contains errors, making it impossible for the server to understand or process the request."
                    },
                    "401": {
                        "description": "Unauthorized, i.e. \t\tThe client's request is missing valid authentication credentials, or the provided credentials are invalid or insufficient to access the requested resource."
                    },
                    "412": {
                        "description": "Precondition failed, i.e. The server received a client request with specific preconditions that were not met."
                    },
                    "415": {
                        "description": "Method not allowed, i.e. The server cannot process the client's request because the provided media type or content format is not supported or acceptable."
                    },
                    "500": {
                        "description": "Internal Server Error, i.e. The server encountered an unexpected error or condition that prevented it from processing the client's request."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AccMoneyReceiptVm": {
                "title": "AccMoneyReceiptVm",
                "required": [
                    "actionCode",
                    "mrStatus",
                    "netPremium",
                    "othersCharge",
                    "paymentType",
                    "stampAmount",
                    "sumInsured",
                    "vatAmount",
                    "vatRate"
                ],
                "type": "object",
                "properties": {
                    "actionCode": {
                        "pattern": "\\bCREATE|UPDATE\\b",
                        "type": "string"
                    },
                    "approvedAt": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "approvedBy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "approvedByName": {
                        "type": "string"
                    },
                    "attachedMrIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "coinsuranceNetCoinsurer": {
                        "type": "number",
                        "format": "double"
                    },
                    "coinsuranceNetGdic": {
                        "type": "number",
                        "format": "double"
                    },
                    "collectedBy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "collectionAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "collectionByName": {
                        "type": "string"
                    },
                    "collectionConfirmationDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "collectionConfirmedBy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "collectionConfirmedByName": {
                        "type": "string"
                    },
                    "collectionDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "collectionStatus": {
                        "type": "string"
                    },
                    "createdAt": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "createdBy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "createdByName": {
                        "type": "string"
                    },
                    "currencyRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "currencyType": {
                        "type": "string"
                    },
                    "depositSlipNo": {
                        "type": "string"
                    },
                    "depositToAccountNumber": {
                        "type": "string"
                    },
                    "depositToBank": {
                        "$ref": "#/components/schemas/ComBankBranchVm"
                    },
                    "depositToBankBranch": {
                        "$ref": "#/components/schemas/ComBankBranchVm"
                    },
                    "depositToBankBranchId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "depositToBankId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "detachedIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "documentIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "documentList": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UnderwritingResponseVm"
                        }
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "installmentNumberVmList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InstallmentNumberVm"
                        }
                    },
                    "installmentType": {
                        "type": "string"
                    },
                    "insuranceType": {
                        "type": "string"
                    },
                    "isCollectionConfirmed": {
                        "type": "boolean"
                    },
                    "isFullOthersChargeCollected": {
                        "type": "boolean"
                    },
                    "isFullServiceChargeCollected": {
                        "type": "boolean"
                    },
                    "isFullStampCollected": {
                        "type": "boolean"
                    },
                    "isFullvatCollected": {
                        "type": "boolean"
                    },
                    "isRefund": {
                        "type": "boolean"
                    },
                    "middlewareRequest": {
                        "type": "boolean"
                    },
                    "modifiedAt": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "modifiedBy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "modifiedByName": {
                        "type": "string"
                    },
                    "mrAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "mrDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "mrFileList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocFilesResponseVm"
                        }
                    },
                    "mrNumber": {
                        "type": "string"
                    },
                    "mrStatus": {
                        "pattern": "\\bDRAFT|FINAL\\b",
                        "type": "string"
                    },
                    "netPremium": {
                        "type": "number",
                        "format": "double"
                    },
                    "othersCharge": {
                        "type": "number",
                        "format": "double"
                    },
                    "paymentDetailsVmSet": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccPaymentDetailsVm"
                        }
                    },
                    "paymentMode": {
                        "type": "string"
                    },
                    "paymentModeVm": {
                        "$ref": "#/components/schemas/PaymentModeVm"
                    },
                    "paymentType": {
                        "pattern": "\\bFULL|PARTIAL|INSTALLMENT|LEADER_PORTION_ONLY\\b",
                        "type": "string"
                    },
                    "paymentTypeVm": {
                        "$ref": "#/components/schemas/PaymentTypeVm"
                    },
                    "refundMrVmList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RefundMrVm"
                        }
                    },
                    "refundParentMrDate": {
                        "type": "string"
                    },
                    "refundParentMrNumber": {
                        "type": "string"
                    },
                    "reviewRemarks": {
                        "type": "string"
                    },
                    "serviceCharge": {
                        "type": "number",
                        "format": "double"
                    },
                    "stampAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "stampDutyType": {
                        "type": "string"
                    },
                    "stampRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "stampType": {
                        "type": "string"
                    },
                    "sumInsured": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalNumberOfInstallment": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "umpMessage": {
                        "type": "string"
                    },
                    "umpResult": {
                        "type": "string"
                    },
                    "umpStatus": {
                        "type": "string"
                    },
                    "umpSubmitDate": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "umpTrackingNumber": {
                        "type": "string"
                    },
                    "umpUrl": {
                        "type": "string"
                    },
                    "vatAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "vatRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "vatType": {
                        "type": "string"
                    }
                }
            },
            "AccMoneyReceiptVm0": {
                "title": "AccMoneyReceiptVm0",
                "required": [
                    "mrStatus",
                    "netPremium",
                    "othersCharge",
                    "paymentType",
                    "stampAmount",
                    "sumInsured",
                    "vatAmount",
                    "vatRate"
                ],
                "type": "object",
                "properties": {
                    "coinsuranceNetCoinsurer": {
                        "type": "number",
                        "format": "double"
                    },
                    "coinsuranceNetGdic": {
                        "type": "number",
                        "format": "double"
                    },
                    "collectedBy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "collectionAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "collectionByName": {
                        "type": "string"
                    },
                    "collectionConfirmationDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "collectionConfirmedBy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "collectionConfirmedByName": {
                        "type": "string"
                    },
                    "collectionDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "collectionStatus": {
                        "type": "string"
                    },
                    "currencyRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "currencyType": {
                        "type": "string"
                    },
                    "depositSlipNo": {
                        "type": "string"
                    },
                    "depositToAccountNumber": {
                        "type": "string"
                    },
                    "depositToBank": {
                        "$ref": "#/components/schemas/ComBankBranchVm"
                    },
                    "depositToBankBranch": {
                        "$ref": "#/components/schemas/ComBankBranchVm"
                    },
                    "depositToBankBranchId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "depositToBankId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "documentList": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UnderwritingResponseVm"
                        }
                    },
                    "documentNumber": {
                        "type": "string"
                    },
                    "insuranceType": {
                        "type": "string"
                    },
                    "isCollectionConfirmed": {
                        "type": "boolean"
                    },
                    "isMiddlewareRequest": {
                        "type": "boolean"
                    },
                    "middlewareRequest": {
                        "type": "boolean"
                    },
                    "mrAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "mrDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "mrNumber": {
                        "type": "string"
                    },
                    "mrStatus": {
                        "pattern": "\\bDRAFT|FINAL\\b",
                        "type": "string"
                    },
                    "netPremium": {
                        "type": "number",
                        "format": "double"
                    },
                    "othersCharge": {
                        "type": "number",
                        "format": "double"
                    },
                    "paymentDetailsVmSet": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccPaymentDetailsVm"
                        }
                    },
                    "paymentMode": {
                        "type": "string"
                    },
                    "paymentType": {
                        "pattern": "\\bFULL|PARTIAL|INSTALLMENT|LEADER_PORTION_ONLY\\b",
                        "type": "string"
                    },
                    "refundParentMrDate": {
                        "type": "string"
                    },
                    "refundParentMrNumber": {
                        "type": "string"
                    },
                    "reviewRemarks": {
                        "type": "string"
                    },
                    "serviceCharge": {
                        "type": "number",
                        "format": "double"
                    },
                    "stampAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "stampDutyType": {
                        "type": "string"
                    },
                    "stampRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "stampType": {
                        "type": "string"
                    },
                    "sumInsured": {
                        "type": "number",
                        "format": "double"
                    },
                    "umpMessage": {
                        "type": "string"
                    },
                    "umpResult": {
                        "type": "string"
                    },
                    "umpStatus": {
                        "type": "string"
                    },
                    "umpSubmitDate": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "umpTrackingNumber": {
                        "type": "string"
                    },
                    "umpUrl": {
                        "type": "string"
                    },
                    "vatAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "vatRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "vatType": {
                        "type": "string"
                    }
                }
            },
            "AccPaymentDetailsVm": {
                "title": "AccPaymentDetailsVm",
                "type": "object",
                "properties": {
                    "bankId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "bankName": {
                        "type": "string"
                    },
                    "branchId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "branchName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "paymentBank": {
                        "$ref": "#/components/schemas/ComBankBranchVm"
                    },
                    "paymentBankBranchId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "paymentBranch": {
                        "$ref": "#/components/schemas/ComBankBranchVm"
                    },
                    "paymentDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "paymentNumber": {
                        "type": "string"
                    },
                    "paymentRoutingNumber": {
                        "type": "string"
                    }
                }
            },
            "Add Document Request": {
                "title": "Add Document Request",
                "required": [
                    "customerInfo",
                    "loginUserInfo"
                ],
                "type": "object",
                "properties": {
                    "bnh": {
                        "description": "Business & Holidays (B&H) related details",
                        "$ref": "#/components/schemas/Business and Holidays Details"
                    },
                    "commonInfo": {
                        "description": "Common Payment Information for MR",
                        "$ref": "#/components/schemas/Document Common Information For Payment"
                    },
                    "customerInfo": {
                        "description": "Customer Information",
                        "$ref": "#/components/schemas/Customer Information"
                    },
                    "ens": {
                        "description": "Employment and Studies (E&S) related details",
                        "$ref": "#/components/schemas/Employment and Studies Details"
                    },
                    "forDataSave": {
                        "type": "object",
                        "description": "Exact quotation response (get-quotation api response 'forDataSave' portion) must be send in this object"
                    },
                    "loginUserInfo": {
                        "description": "Logged in User Information",
                        "$ref": "#/components/schemas/Logged in User Infomation"
                    },
                    "mtr": {
                        "description": "Motor product related details",
                        "$ref": "#/components/schemas/Motor Details"
                    },
                    "nib": {
                        "description": "Nibedita product related details",
                        "$ref": "#/components/schemas/Nibedita Details"
                    },
                    "ppa": {
                        "description": "People's Personal Accident (PPA) product related details",
                        "$ref": "#/components/schemas/People's Personal Accident Details"
                    }
                }
            },
            "Aggregator Products List": {
                "title": "Aggregator Products List",
                "type": "object",
                "properties": {
                    "ageLimitInfo": {
                        "type": "string",
                        "description": "Age limit of the customer/client who are eligiable for this proudct",
                        "example": "16 years to 65 years"
                    },
                    "coverage": {
                        "type": "string",
                        "description": "Coverages of the product",
                        "example": "List of coverages"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the prouduct",
                        "example": "Some long text description of the prouduct"
                    },
                    "exclusion": {
                        "type": "string",
                        "description": "Product Execlution List",
                        "example": "List of exclusions"
                    },
                    "hasSubProduct": {
                        "type": "boolean",
                        "description": "This product has sub-product or not?",
                        "example": false
                    },
                    "id": {
                        "type": "integer",
                        "description": "id of the product",
                        "format": "int64",
                        "example": 1
                    },
                    "keyFeature": {
                        "type": "string",
                        "description": "Key feature of the product",
                        "example": "List of key features"
                    },
                    "productCode": {
                        "type": "string",
                        "description": "product code",
                        "example": "NIB, ENS, MTR etc"
                    },
                    "productDetails": {
                        "type": "array",
                        "description": "If the product has sub-products then this will be in use otherwise this will be null/empty",
                        "example": "For NIB -> NIBEDITA-ECO, NIBEDITA-PLUS etc",
                        "items": {
                            "$ref": "#/components/schemas/Sub Product Details Reponse"
                        }
                    },
                    "productInfo": {
                        "type": "string",
                        "description": "Product Information",
                        "example": "NIBEDITA, BNH, ENS etc"
                    },
                    "productName": {
                        "type": "string",
                        "description": "Name of the Product",
                        "example": "Nibedita, Motor etc"
                    },
                    "sumInsuredInfo": {
                        "type": "string",
                        "description": "Range of sum-insured amount",
                        "example": "BDT 50000 to BDT 2000000"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title of the product",
                        "example": "Full length title of the proudct"
                    }
                }
            },
            "BgDpDTO": {
                "title": "BgDpDTO",
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "number",
                        "format": "double"
                    },
                    "bgDpDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "bgDpNumber": {
                        "type": "string"
                    },
                    "consumedAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "expireDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "flag": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "remainingAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "Business And Holidays": {
                "title": "Business And Holidays",
                "type": "object",
                "properties": {
                    "coveredLimit": {
                        "type": "integer",
                        "description": "Policy Covered limit",
                        "format": "int32",
                        "example": 125000
                    },
                    "dayStay": {
                        "type": "integer",
                        "description": "Number of days for stay",
                        "format": "int32",
                        "example": 160
                    },
                    "placeVisitCode": {
                        "type": "string",
                        "description": "Place visit code",
                        "example": "C"
                    },
                    "policyDuration": {
                        "type": "string",
                        "description": "Policy duration (short or full)",
                        "example": "short"
                    }
                }
            },
            "Business and Holidays Details": {
                "title": "Business and Holidays Details",
                "type": "object",
                "properties": {
                    "coveredLimit": {
                        "type": "integer",
                        "description": "Covered Limit (the height limit of the coverage)",
                        "format": "int64"
                    },
                    "custGender": {
                        "type": "string",
                        "description": "Customer Gender",
                        "example": "Male, Female etc"
                    },
                    "custOccupation": {
                        "type": "string",
                        "description": "Customer Occupation"
                    },
                    "custPasspostNo": {
                        "type": "string",
                        "description": "Customer Passport Number"
                    },
                    "destCountryAddress": {
                        "type": "string",
                        "description": "Destination Country Address"
                    },
                    "doctorId": {
                        "type": "string",
                        "description": "Doctor ID"
                    },
                    "employerAddress": {
                        "type": "string",
                        "description": "Employer Valid Address"
                    },
                    "employerName": {
                        "type": "string",
                        "description": "Employer Full Name"
                    },
                    "insuredOccupation": {
                        "type": "string",
                        "description": "Insured Occupation"
                    },
                    "interestInsured": {
                        "type": "string",
                        "description": "Interest Insured"
                    },
                    "medicalNonMedical": {
                        "type": "string",
                        "description": "Medical or Non-Medical"
                    },
                    "nameOfTheUsualPhysician": {
                        "type": "string",
                        "description": "Name of the Usual Physician"
                    },
                    "officeTelephoneNo": {
                        "type": "string",
                        "description": "Office Telephone Number"
                    },
                    "participant": {
                        "type": "string",
                        "description": "Participant Full Name"
                    },
                    "physicianTelephoneNoHome": {
                        "type": "string",
                        "description": "Physician Telephone Number (Home)"
                    },
                    "physicianTelephoneNoOffice": {
                        "type": "string",
                        "description": "Physician Telephone Number (Office)"
                    },
                    "planName": {
                        "type": "string",
                        "description": "Plan Name (Predefined System Configuration Value)"
                    },
                    "planType": {
                        "type": "string",
                        "description": "Plan Type (Predefined System Configuration Value)"
                    },
                    "reInsuredCountry": {
                        "type": "string",
                        "description": "Re-Insured Country"
                    },
                    "visaType": {
                        "type": "string",
                        "description": "Visa Type of the Customer/Client"
                    }
                }
            },
            "Business and Holidays Dropdown details": {
                "title": "Business and Holidays Dropdown details",
                "type": "object",
                "properties": {
                    "visitList": {
                        "type": "array",
                        "description": "Business and Holidays place visit code list array",
                        "items": {
                            "$ref": "#/components/schemas/Place Visit Model"
                        }
                    }
                }
            },
            "Business and Holidays Prerequisite For Data Save": {
                "title": "Business and Holidays Prerequisite For Data Save",
                "type": "object",
                "properties": {
                    "textFields": {
                        "type": "array",
                        "description": "Prerequisite text fields to save the document policy.",
                        "items": {
                            "$ref": "#/components/schemas/Business and Holidays Related text fields"
                        }
                    }
                },
                "description": "Business and Holidays Prerequisite For Data Save"
            },
            "Business and Holidays Quotation Prerequisite Details": {
                "title": "Business and Holidays Quotation Prerequisite Details",
                "type": "object",
                "properties": {
                    "dropdowns": {
                        "description": "Dropdown values for Business and Holidays",
                        "$ref": "#/components/schemas/Business and Holidays Dropdown details"
                    },
                    "textFields": {
                        "type": "array",
                        "description": "Common text fields array with type and description",
                        "items": {
                            "$ref": "#/components/schemas/Common text field description"
                        }
                    }
                }
            },
            "Business and Holidays Related text fields": {
                "title": "Business and Holidays Related text fields",
                "type": "object",
                "properties": {
                    "descriptions": {
                        "type": "string",
                        "description": "Description of the text field."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the field.",
                        "example": "custOccupation, custPasspostNo, custGender, interestInsured, reInsuredCountry, doctorId, planName, coveredLimit, insuredOccupation, employerName, employerAddress, officeTelephoneNo, nameOfTheUsualPhysician, physicianTelephoneNoOffice, physicianTelephoneNoHome, destCountryAddress, participant, visaType, sponsorName, destCountryCollege, destCountryOccupation, studyCourse, nextKinName, nextKinAddress, nextKinTelNo, nextKinRelationship, physicianHomeTelNo, regionOfCountry"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Indicated whether the field is mandatory to give or not.",
                        "example": false
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the field.",
                        "example": "String, int, float, boolean"
                    }
                },
                "description": "Business and Holidays Related text fields"
            },
            "BusinessSectorSubsectorVm": {
                "title": "BusinessSectorSubsectorVm",
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "oldCode": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "refId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "refSectorName": {
                        "type": "string"
                    }
                }
            },
            "ClauseResponseVm": {
                "title": "ClauseResponseVm",
                "type": "object",
                "properties": {
                    "classCode": {
                        "type": "string"
                    },
                    "clauseCode": {
                        "type": "string"
                    },
                    "clauseId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "clauseName": {
                        "type": "string"
                    },
                    "deptCode": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "isSpecialClause": {
                        "type": "boolean"
                    }
                }
            },
            "ComAgentInfoVm": {
                "title": "ComAgentInfoVm",
                "type": "object",
                "properties": {
                    "agencyCode": {
                        "type": "string"
                    },
                    "bin": {
                        "type": "string"
                    },
                    "cell": {
                        "type": "string"
                    },
                    "dateOfBirth": {
                        "type": "string",
                        "format": "date"
                    },
                    "dateOfExpiry": {
                        "type": "string",
                        "format": "date"
                    },
                    "dateOfIssue": {
                        "type": "string",
                        "format": "date"
                    },
                    "education": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "fatherName": {
                        "type": "string"
                    },
                    "fax": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "idraCode": {
                        "type": "string"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "isLicenced": {
                        "type": "boolean"
                    },
                    "licenceNew": {
                        "type": "string"
                    },
                    "licenceOld": {
                        "type": "string"
                    },
                    "mobileNumber": {
                        "type": "string"
                    },
                    "motherName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nationality": {
                        "type": "string"
                    },
                    "nid": {
                        "type": "string"
                    },
                    "passportNo": {
                        "type": "string"
                    },
                    "permanentAddress": {
                        "type": "string"
                    },
                    "phoneHome": {
                        "type": "string"
                    },
                    "phoneOffice": {
                        "type": "string"
                    },
                    "presentAddress": {
                        "type": "string"
                    },
                    "religion": {
                        "type": "string"
                    },
                    "remarks1": {
                        "type": "string"
                    },
                    "remarks2": {
                        "type": "string"
                    },
                    "sex": {
                        "type": "string"
                    },
                    "spouseName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tin": {
                        "type": "string"
                    },
                    "uniqueAgentCode": {
                        "type": "string"
                    }
                }
            },
            "ComBankBranchVm": {
                "title": "ComBankBranchVm",
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "branchList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ComBankBranchVm"
                        }
                    },
                    "collectionAccountNumber": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "refBankName": {
                        "type": "string"
                    },
                    "refId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "routingNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "zone": {
                        "type": "string"
                    }
                }
            },
            "ComBranchVm": {
                "title": "ComBranchVm",
                "type": "object",
                "properties": {
                    "branchAddress": {
                        "type": "string"
                    },
                    "branchCode": {
                        "type": "string"
                    },
                    "branchEmail": {
                        "type": "string"
                    },
                    "branchMobile": {
                        "type": "string"
                    },
                    "branchName": {
                        "type": "string"
                    },
                    "branchTel": {
                        "type": "string"
                    },
                    "district": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "ComCustomerContactNumberVm": {
                "title": "ComCustomerContactNumberVm",
                "type": "object",
                "properties": {
                    "contactNumber": {
                        "type": "string"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/ComCustomerViewModel"
                    },
                    "customerId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "ComCustomerViewModel": {
                "title": "ComCustomerViewModel",
                "type": "object",
                "properties": {
                    "bgDp": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BgDpDTO"
                        }
                    },
                    "bin": {
                        "type": "string"
                    },
                    "birthRegNo": {
                        "type": "string"
                    },
                    "companyRegAuthority": {
                        "type": "string"
                    },
                    "companyType": {
                        "type": "string"
                    },
                    "contactAddress": {
                        "type": "string"
                    },
                    "contactPerson": {
                        "type": "string"
                    },
                    "customerContactNumberVmList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ComCustomerContactNumberVm"
                        }
                    },
                    "customerGroup": {
                        "$ref": "#/components/schemas/CustomerGroupVm"
                    },
                    "customerType": {
                        "type": "string"
                    },
                    "dateOfBirth": {
                        "type": "string",
                        "format": "date"
                    },
                    "email": {
                        "type": "string"
                    },
                    "exemptedExpiredDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "fatherName": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string"
                    },
                    "groupCode": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "incomeSource": {
                        "type": "string"
                    },
                    "isExemptedCustomer": {
                        "type": "boolean"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "middleName": {
                        "type": "string"
                    },
                    "mobileNo": {
                        "type": "string"
                    },
                    "mobileNos": {
                        "type": "string"
                    },
                    "motherName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nationality": {
                        "type": "string"
                    },
                    "nid": {
                        "type": "string"
                    },
                    "officeAddress": {
                        "type": "string"
                    },
                    "officeContactNumber": {
                        "type": "string"
                    },
                    "oldDbCustomerId": {
                        "type": "string"
                    },
                    "passportExpireDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "passportNo": {
                        "type": "string"
                    },
                    "permanentAddress": {
                        "type": "string"
                    },
                    "presentAddress": {
                        "type": "string"
                    },
                    "refCustomerId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "regIssueDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "spouseName": {
                        "type": "string"
                    },
                    "tin": {
                        "type": "string"
                    },
                    "tradeLicenceNo": {
                        "type": "string"
                    }
                }
            },
            "ComOldCisDocVm": {
                "title": "ComOldCisDocVm",
                "type": "object",
                "properties": {
                    "deptCode": {
                        "type": "string"
                    },
                    "documentNumber": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "producerId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "producerPf": {
                        "type": "string"
                    }
                }
            },
            "Common text field description": {
                "title": "Common text field description",
                "type": "object",
                "properties": {
                    "descriptions": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "required": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "Customer Information": {
                "title": "Customer Information",
                "type": "object",
                "properties": {
                    "bin": {
                        "type": "string",
                        "description": "BIN (Business Identification Number) of the customer",
                        "example": "123456789"
                    },
                    "birthRegNo": {
                        "type": "string",
                        "description": "Birth registration number of the customer",
                        "example": "B9876543"
                    },
                    "companyRegAuthority": {
                        "type": "string",
                        "description": "Company registration authority of the customer",
                        "example": "Government"
                    },
                    "companyType": {
                        "type": "string",
                        "description": "Type of the company",
                        "example": "Corporation, Limited etc."
                    },
                    "contactAddress": {
                        "type": "string",
                        "description": "Contact address for the customer",
                        "example": "789 Third St, City, Country"
                    },
                    "contactPerson": {
                        "type": "string",
                        "description": "Contact person for the customer",
                        "example": "John Doe"
                    },
                    "customerGroupCode": {
                        "type": "string",
                        "description": "Customer group code",
                        "example": "CG123"
                    },
                    "customerType": {
                        "pattern": "\\bBUSINESS|PERSONAL||\\b",
                        "type": "string",
                        "description": "Type of customer (BUSINESS or PERSONAL)",
                        "example": "BUSINESS"
                    },
                    "dateOfBirth": {
                        "type": "string",
                        "description": "Date of birth of the customer format: (YYYY-MM-DD)",
                        "format": "date",
                        "example": "1990-01-01T00:00:00.000+00:00"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email address of the customer",
                        "example": "test@example.com"
                    },
                    "fatherName": {
                        "type": "string",
                        "description": "Father's name of the customer",
                        "example": "John Smith"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "First Name Of The Customer",
                        "example": "Abdur"
                    },
                    "gender": {
                        "type": "string",
                        "description": "Gender of the customer",
                        "example": "Male, Female etc."
                    },
                    "id": {
                        "type": "integer",
                        "description": "Auto increment id",
                        "format": "int64",
                        "example": 123456
                    },
                    "incomeSource": {
                        "type": "string",
                        "description": "Source of customer's income",
                        "example": "Employment, Business etc."
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Last Name Of The Customer",
                        "example": "Sujon"
                    },
                    "middleName": {
                        "type": "string",
                        "description": "Middle Name Of The Customer",
                        "example": "Rahman"
                    },
                    "mobileNo": {
                        "type": "string",
                        "description": "Mobile number of the customer",
                        "example": "1234567890"
                    },
                    "motherName": {
                        "type": "string",
                        "description": "Mother's name of the customer",
                        "example": "Mary Smith"
                    },
                    "name": {
                        "type": "string",
                        "description": "Full name of the customer",
                        "example": "Abdur Rahman Sujon"
                    },
                    "nationality": {
                        "type": "string",
                        "description": "Nationality of the customer",
                        "example": "Bangladeshi, US, Canada etc."
                    },
                    "nid": {
                        "type": "string",
                        "description": "National ID number of the customer",
                        "example": "1234567890"
                    },
                    "officeAddress": {
                        "type": "string",
                        "description": "Office address of the customer",
                        "example": "101 Business Ave, City, Country"
                    },
                    "officeContactNumber": {
                        "type": "string",
                        "description": "Office contact number of the customer",
                        "example": "+1234567890"
                    },
                    "passportExpireDate": {
                        "type": "string",
                        "description": "Passport expiry date of the customer",
                        "example": "2025-01-01"
                    },
                    "passportNo": {
                        "type": "string",
                        "description": "Passport number of the customer",
                        "example": "A1234567"
                    },
                    "permanentAddress": {
                        "type": "string",
                        "description": "Permanent address of the customer",
                        "example": "456 Second St, City, Country"
                    },
                    "presentAddress": {
                        "type": "string",
                        "description": "Present address of the customer",
                        "example": "123 Main St, City, Country"
                    },
                    "regIssueDate": {
                        "type": "string",
                        "description": "Registration issue date",
                        "example": "2022-01-15"
                    },
                    "spouseName": {
                        "type": "string",
                        "description": "Spouse's name of the customer",
                        "example": "Jane Smith"
                    },
                    "tin": {
                        "type": "string",
                        "description": "TIN (Tax Identification Number) of the customer",
                        "example": "987654321"
                    },
                    "tradeLicenceNo": {
                        "type": "string",
                        "description": "Trade license number of the customer",
                        "example": "T987654321"
                    }
                }
            },
            "Customer Response Body": {
                "title": "Customer Response Body",
                "type": "object",
                "properties": {
                    "bin": {
                        "type": "string",
                        "description": "BIN (Business Identification Number) of the customer",
                        "example": "123456789"
                    },
                    "birthRegNo": {
                        "type": "string",
                        "description": "Birth registration number of the customer",
                        "example": "B9876543"
                    },
                    "companyRegAuthority": {
                        "type": "string",
                        "description": "Company registration authority of the customer",
                        "example": "Government"
                    },
                    "companyType": {
                        "type": "string",
                        "description": "Type of the company",
                        "example": "Corporation, Limited etc."
                    },
                    "contactAddress": {
                        "type": "string",
                        "description": "Contact address for the customer",
                        "example": "789 Third St, City, Country"
                    },
                    "contactPerson": {
                        "type": "string",
                        "description": "Contact person for the customer",
                        "example": "John Doe"
                    },
                    "customerGroupCode": {
                        "type": "string",
                        "description": "Customer group code",
                        "example": "CG123"
                    },
                    "customerId": {
                        "type": "integer",
                        "description": "Customer sequential auto increment id",
                        "format": "int64",
                        "example": 1234
                    },
                    "customerType": {
                        "type": "string",
                        "description": "Type of the customer",
                        "example": "Individual, Business etc."
                    },
                    "dateOfBirth": {
                        "type": "string",
                        "description": "Date of birth of the customer {format: (YYYY-MM-DD)}",
                        "format": "date",
                        "example": "1990-01-01T00:00:00.000+00:00"
                    },
                    "email": {
                        "type": "string",
                        "description": "Valid email address of the customer",
                        "example": "test@example.com"
                    },
                    "exemptedExpiredDate": {
                        "type": "string",
                        "description": "Exampted Customer expiry date",
                        "format": "date"
                    },
                    "fatherName": {
                        "type": "string",
                        "description": "Father's name of the customer",
                        "example": "John Smith"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "First Name Of The Customer",
                        "example": "Abdur"
                    },
                    "gender": {
                        "type": "string",
                        "description": "Gender of the customer",
                        "example": "Male, Female etc."
                    },
                    "incomeSource": {
                        "type": "string",
                        "description": "Customer's source of income",
                        "example": "Employment, Business etc."
                    },
                    "isExemptedCustomer": {
                        "type": "boolean",
                        "description": "Customer is Vat Exampted or not",
                        "example": false
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Last Name Of The Customer",
                        "example": "Sujon"
                    },
                    "middleName": {
                        "type": "string",
                        "description": "Middle Name Of The Customer",
                        "example": "Rahman"
                    },
                    "mobileNo": {
                        "type": "string",
                        "description": "Mobile number of the customer",
                        "example": "01234567890"
                    },
                    "mobileNos": {
                        "type": "string",
                        "description": "Mobile numbers of the customer (if Customer have multiple mobile numbers)",
                        "example": "01234567890, 0124234324234, 02342342343"
                    },
                    "motherName": {
                        "type": "string",
                        "description": "Mother's name of the customer",
                        "example": "Mary Smith"
                    },
                    "name": {
                        "type": "string",
                        "description": "Full name of the customer",
                        "example": "Abdur Rahman Sujon"
                    },
                    "nationality": {
                        "type": "string",
                        "description": "Nationality of the customer",
                        "example": "Bangladeshi, US, Canada etc."
                    },
                    "nid": {
                        "type": "string",
                        "description": "National ID number (NID) of the customer",
                        "example": "1234567890"
                    },
                    "officeAddress": {
                        "type": "string",
                        "description": "Office address of the customer",
                        "example": "101 Business Ave, City, Country"
                    },
                    "officeContactNumber": {
                        "type": "string",
                        "description": "Office contact number of the customer",
                        "example": "+1234567890"
                    },
                    "passportExpireDate": {
                        "type": "string",
                        "description": "Passport expiry date of the customer",
                        "format": "date",
                        "example": "2025-01-01T00:00:00.000+00:00"
                    },
                    "passportNo": {
                        "type": "string",
                        "description": "Passport number of the customer",
                        "example": "A1234567"
                    },
                    "permanentAddress": {
                        "type": "string",
                        "description": "Permanent address of the customer",
                        "example": "456 Second St, City, Country"
                    },
                    "presentAddress": {
                        "type": "string",
                        "description": "Present address of the customer",
                        "example": "123 Main St, City, Country"
                    },
                    "refCustomerId": {
                        "type": "integer",
                        "description": "Reference customer id",
                        "format": "int64",
                        "example": 12342343
                    },
                    "regIssueDate": {
                        "type": "string",
                        "description": "Registration issue date",
                        "format": "date",
                        "example": "2022-01-15T00:00:00.000+00:00"
                    },
                    "spouseName": {
                        "type": "string",
                        "description": "Spouse's name of the customer",
                        "example": "Jane Smith"
                    },
                    "tin": {
                        "type": "string",
                        "description": "TIN (Tax Identification Number) of the customer",
                        "example": "987654321"
                    },
                    "tradeLicenceNo": {
                        "type": "string",
                        "description": "Trade license number of the customer",
                        "example": "T987654321"
                    }
                }
            },
            "CustomerGroupVm": {
                "title": "CustomerGroupVm",
                "type": "object",
                "properties": {
                    "groupName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "Data Object Single«AccMoneyReceiptVm»": {
                "title": "Data Object Single«AccMoneyReceiptVm»",
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/AccMoneyReceiptVm0"
                    },
                    "remarks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Indicates whether the request execution status, true is success, false is failed.",
                        "example": false
                    },
                    "timestamp": {
                        "description": "Time and date of the execution",
                        "$ref": "#/components/schemas/Timestamp",
                        "example": "2023-11-09 17:02:32.041"
                    }
                }
            },
            "Data Object Single«Get Product List Response»": {
                "title": "Data Object Single«Get Product List Response»",
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Get Product List Response"
                    },
                    "remarks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Indicates whether the request execution status, true is success, false is failed.",
                        "example": false
                    },
                    "timestamp": {
                        "description": "Time and date of the execution",
                        "$ref": "#/components/schemas/Timestamp",
                        "example": "2023-11-09 17:02:32.041"
                    }
                }
            },
            "Data Object Single«Get Quotation Response»": {
                "title": "Data Object Single«Get Quotation Response»",
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Get Quotation Response"
                    },
                    "remarks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Indicates whether the request execution status, true is success, false is failed.",
                        "example": false
                    },
                    "timestamp": {
                        "description": "Time and date of the execution",
                        "$ref": "#/components/schemas/Timestamp",
                        "example": "2023-11-09 17:02:32.041"
                    }
                }
            },
            "Data Object Single«Quotation Prerequsite Response»": {
                "title": "Data Object Single«Quotation Prerequsite Response»",
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Quotation Prerequsite Response"
                    },
                    "remarks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Indicates whether the request execution status, true is success, false is failed.",
                        "example": false
                    },
                    "timestamp": {
                        "description": "Time and date of the execution",
                        "$ref": "#/components/schemas/Timestamp",
                        "example": "2023-11-09 17:02:32.041"
                    }
                }
            },
            "Data Object Single«SearchMasterDocumentResponse»": {
                "title": "Data Object Single«SearchMasterDocumentResponse»",
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/SearchMasterDocumentResponse"
                    },
                    "remarks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Indicates whether the request execution status, true is success, false is failed.",
                        "example": false
                    },
                    "timestamp": {
                        "description": "Time and date of the execution",
                        "$ref": "#/components/schemas/Timestamp",
                        "example": "2023-11-09 17:02:32.041"
                    }
                }
            },
            "Data Object Single«UnderwritingResponseVm»": {
                "title": "Data Object Single«UnderwritingResponseVm»",
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/UnderwritingResponseVm"
                    },
                    "remarks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Indicates whether the request execution status, true is success, false is failed.",
                        "example": false
                    },
                    "timestamp": {
                        "description": "Time and date of the execution",
                        "$ref": "#/components/schemas/Timestamp",
                        "example": "2023-11-09 17:02:32.041"
                    }
                }
            },
            "Data Object«Customer Response Body»": {
                "title": "Data Object«Customer Response Body»",
                "type": "object",
                "properties": {
                    "correlationID": {
                        "type": "string",
                        "description": "For maintain asynchronous process"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Customer Response Body"
                        }
                    },
                    "messageID": {
                        "type": "string",
                        "description": "For maintain asynchronous process"
                    },
                    "remarks": {
                        "$ref": "#/components/schemas/Remarks"
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Indicates whether the request execution status, true is success, false is failed.",
                        "example": false
                    },
                    "timestamp": {
                        "type": "string",
                        "description": "Time and date of the execution",
                        "example": "2023-11-09 17:02:32.041"
                    }
                }
            },
            "Data Object«Save Master Document Response»": {
                "title": "Data Object«Save Master Document Response»",
                "type": "object",
                "properties": {
                    "correlationID": {
                        "type": "string",
                        "description": "For maintain asynchronous process"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Save Master Document Response"
                        }
                    },
                    "messageID": {
                        "type": "string",
                        "description": "For maintain asynchronous process"
                    },
                    "remarks": {
                        "$ref": "#/components/schemas/Remarks"
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Indicates whether the request execution status, true is success, false is failed.",
                        "example": false
                    },
                    "timestamp": {
                        "type": "string",
                        "description": "Time and date of the execution",
                        "example": "2023-11-09 17:02:32.041"
                    }
                }
            },
            "Data Object«string»": {
                "title": "Data Object«string»",
                "type": "object",
                "properties": {
                    "correlationID": {
                        "type": "string",
                        "description": "For maintain asynchronous process"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "messageID": {
                        "type": "string",
                        "description": "For maintain asynchronous process"
                    },
                    "remarks": {
                        "$ref": "#/components/schemas/Remarks"
                    },
                    "result": {
                        "type": "boolean",
                        "description": "Indicates whether the request execution status, true is success, false is failed.",
                        "example": false
                    },
                    "timestamp": {
                        "type": "string",
                        "description": "Time and date of the execution",
                        "example": "2023-11-09 17:02:32.041"
                    }
                }
            },
            "Data Save Prerequisite": {
                "title": "Data Save Prerequisite",
                "type": "object",
                "properties": {
                    "bnh": {
                        "description": "BNH (Business & Holidays) details",
                        "$ref": "#/components/schemas/Business and Holidays Prerequisite For Data Save"
                    },
                    "ens": {
                        "description": "ENS (Employee & Study) details",
                        "$ref": "#/components/schemas/Employment and Studies Prerequisite For DataSave"
                    },
                    "mtr": {
                        "description": "MTR (Motor) details",
                        "$ref": "#/components/schemas/Motor Prerequisite For Data Save"
                    },
                    "nib": {
                        "description": "NIB (Nibedita) products",
                        "$ref": "#/components/schemas/Nibedita Prerequisite For Data Save"
                    },
                    "pac": {
                        "description": "PAC (Personal Accedent) details",
                        "$ref": "#/components/schemas/Personal Accident Prerequisite for Data Save"
                    },
                    "ppa": {
                        "description": "PPA (People's personal accedent) details",
                        "$ref": "#/components/schemas/Prerequisite for Data Save"
                    }
                },
                "description": "These are some of 'Data Save Prerequisite' for (add-master-document) api calling where different type of prequsite are needed."
            },
            "DocCustomerContactVm": {
                "title": "DocCustomerContactVm",
                "type": "object",
                "properties": {
                    "contactNumber": {
                        "type": "string"
                    },
                    "customerContactId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "masterDocId": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "DocEmployeeVm": {
                "title": "DocEmployeeVm",
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "designation": {
                        "type": "string"
                    },
                    "dob": {
                        "type": "string",
                        "format": "date"
                    },
                    "email": {
                        "type": "string"
                    },
                    "fullname": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "mobile": {
                        "type": "string"
                    },
                    "nid": {
                        "type": "string"
                    },
                    "pfNo": {
                        "type": "string"
                    }
                }
            },
            "DocFilesResponseVm": {
                "title": "DocFilesResponseVm",
                "type": "object",
                "properties": {
                    "base64": {
                        "type": "string"
                    },
                    "fileExtention": {
                        "type": "string"
                    },
                    "fileFullName": {
                        "type": "string"
                    },
                    "fileFullPath": {
                        "type": "string"
                    },
                    "fileSizeKb": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "DocInterestVm": {
                "title": "DocInterestVm",
                "required": [
                    "interestAmount",
                    "perils"
                ],
                "type": "object",
                "properties": {
                    "floor": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "interestAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "interestName": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "perils": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocPerilVm"
                        }
                    },
                    "productClass": {
                        "type": "string"
                    },
                    "referenceId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "roof": {
                        "type": "string"
                    },
                    "wall": {
                        "type": "string"
                    },
                    "yearOfManufacturing": {
                        "type": "string"
                    }
                }
            },
            "DocMiscHealthDetailsVm": {
                "title": "DocMiscHealthDetailsVm",
                "type": "object",
                "properties": {
                    "age": {
                        "type": "string"
                    },
                    "construction": {
                        "type": "string"
                    },
                    "docNomineeDetailsVmList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocMiscHealthNomineeDetailsVm"
                        }
                    },
                    "hasNominee": {
                        "type": "boolean"
                    },
                    "healthRemarks": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "isDeclaration": {
                        "type": "boolean"
                    },
                    "isMinimumNetPremium": {
                        "type": "boolean"
                    },
                    "issuedPlace": {
                        "type": "string"
                    },
                    "occupation": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "pacClassType": {
                        "type": "string"
                    },
                    "pacCoverType": {
                        "type": "string"
                    },
                    "pacOccupation": {
                        "type": "string"
                    },
                    "perilRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "ppaAdditionalInfo": {
                        "type": "string"
                    },
                    "prbAgentAddress": {
                        "type": "string"
                    },
                    "prbAgentContactNumber": {
                        "type": "string"
                    },
                    "prbAgentName": {
                        "type": "string"
                    },
                    "riskType": {
                        "type": "string"
                    },
                    "situation": {
                        "type": "string"
                    }
                }
            },
            "DocMiscHealthNomineeDetailsVm": {
                "title": "DocMiscHealthNomineeDetailsVm",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "nomineeAddress": {
                        "type": "string"
                    },
                    "nomineeDateOfBirth": {
                        "type": "string",
                        "format": "date"
                    },
                    "nomineeEmail": {
                        "type": "string"
                    },
                    "nomineeMobile": {
                        "type": "string"
                    },
                    "nomineeName": {
                        "type": "string"
                    },
                    "nomineeNid": {
                        "type": "string"
                    },
                    "nomineeRelation": {
                        "type": "string"
                    },
                    "nomineeSharePct": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "DocMotorDetailsVm": {
                "title": "DocMotorDetailsVm",
                "required": [
                    "actualComprehensiveRate",
                    "avlsDiscountRate",
                    "daysCount",
                    "finalComprehensiveRate",
                    "grossPremiumAfterPromoCode",
                    "isAvlsDiscount",
                    "isNamedDriver",
                    "isOppositePurposeUseLoading",
                    "isPrivateCarBelow750",
                    "isTaxFreeVehicle",
                    "isTechometerVehicle",
                    "loadingRate",
                    "manufactureYear",
                    "motorMakeAndBodyType",
                    "mtrCcTon",
                    "mtrCcTonValue",
                    "mtrDriverTimesMultiply",
                    "mtrHelperTimesMultiply",
                    "mtrNoOfDriver",
                    "mtrNoOfHelper",
                    "mtrNoOfPassenger",
                    "mtrPassengerTimesMultiply",
                    "mtrPerDriverRate",
                    "mtrPerHelperRate",
                    "mtrPerPassengerRate",
                    "mtrPlanName",
                    "mtrVehicleId",
                    "mtrVehicleName",
                    "mtrVehicleType",
                    "namedDriverRate",
                    "noClaimBonusRate",
                    "oppositePurposeUseLoadingRate",
                    "ownDamageBasic",
                    "promoCode",
                    "promoCodeDiscount",
                    "taxFreeVehicleRate",
                    "techometerDiscountRate"
                ],
                "type": "object",
                "properties": {
                    "actualComprehensiveRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "avlsDiscountAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "avlsDiscountRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "daysCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "finalComprehensiveRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "grossPremiumAfterPromoCode": {
                        "type": "number",
                        "format": "double"
                    },
                    "isAvlsDiscount": {
                        "type": "boolean"
                    },
                    "isNamedDriver": {
                        "type": "boolean"
                    },
                    "isOppositePurposeUseLoading": {
                        "type": "boolean"
                    },
                    "isPrivateCarBelow750": {
                        "type": "boolean"
                    },
                    "isTaxFreeVehicle": {
                        "type": "boolean"
                    },
                    "isTechometerVehicle": {
                        "type": "boolean"
                    },
                    "loadingAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "loadingRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "manufactureYear": {
                        "type": "string"
                    },
                    "motorEngineAndChassisNumber": {
                        "type": "string"
                    },
                    "motorMakeAndBodyType": {
                        "type": "string"
                    },
                    "motorRegistrationNumber": {
                        "type": "string"
                    },
                    "motorTermsOfUseId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "mtrCcTon": {
                        "type": "string"
                    },
                    "mtrCcTonValue": {
                        "type": "number",
                        "format": "double"
                    },
                    "mtrDriverTimesMultiply": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "mtrHelperTimesMultiply": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "mtrNoOfDriver": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "mtrNoOfHelper": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "mtrNoOfPassenger": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "mtrPassengerTimesMultiply": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "mtrPerDriverRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "mtrPerHelperRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "mtrPerPassengerRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "mtrPlanName": {
                        "type": "string"
                    },
                    "mtrVehicleId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "mtrVehicleName": {
                        "type": "string"
                    },
                    "mtrVehicleType": {
                        "type": "string"
                    },
                    "namedDriverAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "namedDriverRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "noClaimBonusAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "noClaimBonusRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "oppositePurposeUseLoadingAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "oppositePurposeUseLoadingRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "othersCharge": {
                        "type": "number",
                        "format": "double"
                    },
                    "ownDamageBasic": {
                        "type": "number",
                        "format": "double"
                    },
                    "ownDamagePremium": {
                        "type": "number",
                        "format": "double"
                    },
                    "ownDamagePremiumTemp": {
                        "type": "number",
                        "format": "double"
                    },
                    "ownDamagePremiumWithLoading": {
                        "type": "number",
                        "format": "double"
                    },
                    "privateCarBelow750CcDiscountAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "privateCarBelow750CcDiscountRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "promoCode": {
                        "type": "string"
                    },
                    "promoCodeDiscount": {
                        "type": "number",
                        "format": "double"
                    },
                    "shortPeriodRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "taxFreeVehicleLoadingAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "taxFreeVehicleRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "techometerDiscountAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "techometerDiscountRate": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "DocNoVm": {
                "title": "DocNoVm",
                "required": [
                    "docNo"
                ],
                "type": "object",
                "properties": {
                    "docNo": {
                        "type": "string"
                    }
                }
            },
            "DocPerilVm": {
                "title": "DocPerilVm",
                "required": [
                    "perilAmount",
                    "perilRate",
                    "premium"
                ],
                "type": "object",
                "properties": {
                    "classCode": {
                        "type": "string"
                    },
                    "deductible": {
                        "type": "string"
                    },
                    "deptCode": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "indemnityPeriod": {
                        "type": "string"
                    },
                    "isExclusion": {
                        "type": "boolean"
                    },
                    "isProvisionalRate": {
                        "type": "boolean"
                    },
                    "pacCoverType": {
                        "type": "string"
                    },
                    "pacCoverTypeName": {
                        "type": "string"
                    },
                    "pacOccupation": {
                        "type": "string"
                    },
                    "perilAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "perilCode": {
                        "type": "string"
                    },
                    "perilDiscountRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "perilId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "perilLoadingRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "perilName": {
                        "type": "string"
                    },
                    "perilRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "perilShortRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "premium": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "DocTravelDetailsVm": {
                "title": "DocTravelDetailsVm",
                "required": [
                    "custAge",
                    "custPasspostNo",
                    "dateOfBirth"
                ],
                "type": "object",
                "properties": {
                    "conversionRateUsdToBdt": {
                        "type": "number",
                        "format": "double"
                    },
                    "coveredLimit": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "custAge": {
                        "type": "number",
                        "format": "float"
                    },
                    "custGender": {
                        "type": "string"
                    },
                    "custOcu": {
                        "type": "string"
                    },
                    "custPasspostNo": {
                        "type": "string"
                    },
                    "dateOfBirth": {
                        "type": "string",
                        "format": "date"
                    },
                    "dayStay": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "destCountry": {
                        "type": "string"
                    },
                    "destCountryAddress": {
                        "type": "string"
                    },
                    "doctorId": {
                        "type": "string"
                    },
                    "employerAddress": {
                        "type": "string"
                    },
                    "employerName": {
                        "type": "string"
                    },
                    "ensType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "insuredOccupation": {
                        "type": "string"
                    },
                    "interestInsured": {
                        "type": "string"
                    },
                    "issuedPlace": {
                        "type": "string"
                    },
                    "issuingOffice": {
                        "type": "string"
                    },
                    "loadingAmt": {
                        "type": "number",
                        "format": "double"
                    },
                    "medicalNonMedical": {
                        "type": "string"
                    },
                    "monthStay": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "nameOfTheUsualPhysician": {
                        "type": "string"
                    },
                    "numberOfChild": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "numberOfPerson": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "officeTelephoneNo": {
                        "type": "string"
                    },
                    "participant": {
                        "type": "string"
                    },
                    "physicianTelephoneNoHome": {
                        "type": "string"
                    },
                    "physicianTelephoneNoOffice": {
                        "type": "string"
                    },
                    "placeVisit": {
                        "type": "string"
                    },
                    "placeVisitCode": {
                        "type": "string"
                    },
                    "planName": {
                        "type": "string"
                    },
                    "planType": {
                        "type": "string"
                    },
                    "reInsuredCountry": {
                        "type": "string"
                    },
                    "regionOfCountry": {
                        "type": "string"
                    },
                    "visaType": {
                        "type": "string"
                    }
                }
            },
            "Document Common Information For Payment": {
                "title": "Document Common Information For Payment",
                "required": [
                    "paymentBankName",
                    "paymentBranchName",
                    "paymentDate",
                    "paymentMode",
                    "paymentNumber",
                    "paymentRoutingNumber",
                    "trxNumber"
                ],
                "type": "object",
                "properties": {
                    "paymentBankName": {
                        "type": "string",
                        "description": "Payment Bank Name"
                    },
                    "paymentBranchName": {
                        "type": "string",
                        "description": "Payment Branch Name"
                    },
                    "paymentDate": {
                        "type": "string",
                        "description": "Transaction Payment Date",
                        "format": "date"
                    },
                    "paymentMode": {
                        "type": "string",
                        "description": "Mode of the payment by which the transaction made"
                    },
                    "paymentNumber": {
                        "type": "string",
                        "description": "Transaction Payment Number"
                    },
                    "paymentRoutingNumber": {
                        "type": "string",
                        "description": "Payment Routing Number"
                    },
                    "trxNumber": {
                        "type": "string",
                        "description": "Transaction Number"
                    }
                }
            },
            "Employment And Studies": {
                "title": "Employment And Studies",
                "type": "object",
                "properties": {
                    "conversionRateUsdToBdt": {
                        "type": "number",
                        "description": "Conversion rate from USD to BDT",
                        "format": "double",
                        "example": 90
                    },
                    "coveredLimit": {
                        "type": "integer",
                        "description": "Policy Covered limit, When ensType=Employment, Default: 0, When applicable value will be 125000",
                        "format": "int64",
                        "example": 125000
                    },
                    "dayStay": {
                        "type": "integer",
                        "description": "Number of days for stay",
                        "format": "int32",
                        "example": 0
                    },
                    "ensType": {
                        "pattern": "\\bEmployment|Study\\b",
                        "type": "string",
                        "description": "ENS type",
                        "example": "Employment"
                    },
                    "monthStay": {
                        "type": "integer",
                        "description": "Number of months for stay",
                        "format": "int32",
                        "example": 8
                    },
                    "numberOfChild": {
                        "type": "integer",
                        "description": "Number of children, When ensType=Employment, Default: 0",
                        "format": "int32",
                        "example": 0
                    },
                    "numberOfPerson": {
                        "type": "integer",
                        "description": "Number of persons, When ensType=Employment, Default: 1",
                        "format": "int32",
                        "example": 1
                    },
                    "placeVisitCode": {
                        "type": "string",
                        "description": "Place visit code",
                        "example": "B"
                    }
                }
            },
            "Employment and Studies Details": {
                "title": "Employment and Studies Details",
                "type": "object",
                "properties": {
                    "coveredLimit": {
                        "type": "integer",
                        "description": "Covered Limit (Specific Value that will be covered under this policy)",
                        "format": "int64"
                    },
                    "custGender": {
                        "type": "string",
                        "description": "Customer Gender"
                    },
                    "custOccupation": {
                        "type": "string",
                        "description": "Customer Occupation"
                    },
                    "custPasspostNo": {
                        "type": "string",
                        "description": "Customer Passport Number"
                    },
                    "destCountryAddress": {
                        "type": "string",
                        "description": "Destination Country Address"
                    },
                    "doctorId": {
                        "type": "string",
                        "description": "Doctor ID"
                    },
                    "employerAddress": {
                        "type": "string",
                        "description": "Employer Valid Address"
                    },
                    "employerName": {
                        "type": "string",
                        "description": "Employer Full Name"
                    },
                    "insuredOccupation": {
                        "type": "string",
                        "description": "Insured Occupation"
                    },
                    "interestInsured": {
                        "type": "string",
                        "description": "Interest Insured"
                    },
                    "medicalNonMedical": {
                        "type": "string",
                        "description": "Medical or Non-Medical"
                    },
                    "nameOfTheUsualPhysician": {
                        "type": "string",
                        "description": "Name of the Usual Physician"
                    },
                    "officeTelephoneNo": {
                        "type": "string",
                        "description": "Office Telephone Number"
                    },
                    "participant": {
                        "type": "string",
                        "description": "Participant Name"
                    },
                    "physicianTelephoneNoHome": {
                        "type": "string",
                        "description": "Physician Telephone Number (Home)"
                    },
                    "physicianTelephoneNoOffice": {
                        "type": "string",
                        "description": "Physician Telephone Number (Office)"
                    },
                    "planName": {
                        "type": "string",
                        "description": "Plan Name (Predefined System Configuration Value)"
                    },
                    "planType": {
                        "type": "string",
                        "description": "Plan Type (Predefined System Configuration Value)"
                    },
                    "reInsuredCountry": {
                        "type": "string",
                        "description": "Re-Insured Country"
                    },
                    "visaType": {
                        "type": "string",
                        "description": "Visa Type of the Customer/Client"
                    }
                }
            },
            "Employment and Studies Prerequisite For DataSave": {
                "title": "Employment and Studies Prerequisite For DataSave",
                "type": "object",
                "properties": {
                    "textFields": {
                        "type": "array",
                        "description": "Prerequisite text fields to save the document policy.",
                        "items": {
                            "$ref": "#/components/schemas/Employment and Studies Related text fields"
                        }
                    }
                },
                "description": "Employment and Studies Prerequisite For DataSave"
            },
            "Employment and Studies Quotation Prerequisite Details": {
                "title": "Employment and Studies Quotation Prerequisite Details",
                "type": "object",
                "properties": {
                    "dropdowns": {
                        "description": "Dropdown values for Employment and Studies",
                        "$ref": "#/components/schemas/EnsDropdownDetails"
                    },
                    "textFields": {
                        "type": "array",
                        "description": "Common text fields array with type and description",
                        "items": {
                            "$ref": "#/components/schemas/Common text field description"
                        }
                    }
                }
            },
            "Employment and Studies Related text fields": {
                "title": "Employment and Studies Related text fields",
                "type": "object",
                "properties": {
                    "descriptions": {
                        "type": "string",
                        "description": "Description of the text field."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the field.",
                        "example": "custOccupation, custPasspostNo, custGender, interestInsured, reInsuredCountry, doctorId, planName, coveredLimit, insuredOccupation, employerName, employerAddress, officeTelephoneNo, nameOfTheUsualPhysician, physicianTelephoneNoOffice, physicianTelephoneNoHome, destCountryAddress, participant, visaType, sponsorName, destCountryCollege, destCountryOccupation, studyCourse, nextKinName, nextKinAddress, nextKinTelNo, nextKinRelationship, physicianHomeTelNo, regionOfCountry"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Indicated whether the field is mandatory to give or not.",
                        "example": false
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the field.",
                        "example": "String, int, float, boolean"
                    }
                },
                "description": "Employment and Studies Related text fields"
            },
            "EnsDropdownDetails": {
                "title": "EnsDropdownDetails",
                "type": "object",
                "properties": {
                    "visitList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Place Visit Model"
                        }
                    }
                }
            },
            "FireMasterDocVm": {
                "title": "FireMasterDocVm",
                "required": [
                    "businessStatus",
                    "businessType",
                    "currencyRate",
                    "currencyType",
                    "customerIds",
                    "discountAmount",
                    "documentStatus",
                    "documentType",
                    "grossPremium",
                    "hasBgDp",
                    "hasClause",
                    "hasCoInsurance",
                    "hasMortgage",
                    "isConvertedDocument",
                    "netPremium",
                    "othersCharge",
                    "policyDuration",
                    "serviceCharge",
                    "stampAmount",
                    "stampDutyType",
                    "stampType",
                    "sumInsured",
                    "vatAmount",
                    "vatType"
                ],
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "agentCode": {
                        "type": "string"
                    },
                    "agentId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "amendmentCauseCode": {
                        "type": "string"
                    },
                    "amendmentCauseValue": {
                        "type": "string"
                    },
                    "amendmentPremiumMode": {
                        "type": "string"
                    },
                    "amendmentSumInsuredType": {
                        "type": "string"
                    },
                    "amendmentType": {
                        "type": "string"
                    },
                    "annualGrossProfit": {
                        "type": "number",
                        "format": "double"
                    },
                    "approvalStatus": {
                        "type": "string"
                    },
                    "authorizedSignatureId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "authorizedSignaturePf": {
                        "type": "string"
                    },
                    "body1": {
                        "type": "string"
                    },
                    "body2": {
                        "type": "string"
                    },
                    "branchId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "businessSource": {
                        "type": "string"
                    },
                    "businessStatus": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string"
                    },
                    "businessSubsectorId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "businessType": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string"
                    },
                    "classCode": {
                        "type": "string"
                    },
                    "conversions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "currencyRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "currencyType": {
                        "type": "string"
                    },
                    "customerGroup": {
                        "type": "string"
                    },
                    "customerGroupId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "customerId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "customerIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "customerName": {
                        "type": "string"
                    },
                    "customerType": {
                        "type": "string"
                    },
                    "declarationAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "declarationPercent": {
                        "type": "number",
                        "format": "double"
                    },
                    "declarationRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "declarationType": {
                        "type": "string"
                    },
                    "deductible": {
                        "type": "string"
                    },
                    "department": {
                        "type": "string"
                    },
                    "discountAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "discountRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "discountType": {
                        "type": "string"
                    },
                    "documentDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "documentNumber": {
                        "type": "string"
                    },
                    "documentNumberSuffix": {
                        "type": "string"
                    },
                    "documentStatus": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string"
                    },
                    "documentType": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "pattern": "\\bF|P|C|T|A|E|R|B|Q\\b",
                        "type": "string"
                    },
                    "documentValidFrom": {
                        "type": "string",
                        "format": "date"
                    },
                    "documentValidTo": {
                        "type": "string",
                        "format": "date"
                    },
                    "exclusions": {
                        "type": "string"
                    },
                    "grossPremium": {
                        "type": "number",
                        "format": "double"
                    },
                    "hasBgDp": {
                        "type": "boolean"
                    },
                    "hasClause": {
                        "type": "boolean"
                    },
                    "hasCoInsurance": {
                        "type": "boolean"
                    },
                    "hasDiscount": {
                        "type": "boolean"
                    },
                    "hasMortgage": {
                        "type": "boolean"
                    },
                    "hasMultipleCustomer": {
                        "type": "boolean"
                    },
                    "hasRiskCoveredConditions": {
                        "type": "boolean"
                    },
                    "hasSpecialClause": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "indemnityPeriod": {
                        "type": "string"
                    },
                    "installmentNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "insuranceType": {
                        "type": "string"
                    },
                    "insuredAddress": {
                        "type": "string"
                    },
                    "introducerId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "introducerPf": {
                        "type": "string"
                    },
                    "isApproved": {
                        "type": "boolean"
                    },
                    "isConvertedDocument": {
                        "type": "boolean"
                    },
                    "isDeclaration": {
                        "type": "boolean"
                    },
                    "isDocumentPrintAllow": {
                        "type": "boolean"
                    },
                    "isGdicLeader": {
                        "type": "boolean"
                    },
                    "isMixedVat": {
                        "type": "boolean"
                    },
                    "isMrCreationAllowed": {
                        "type": "boolean"
                    },
                    "isRefund": {
                        "type": "boolean"
                    },
                    "isVatExempted": {
                        "type": "boolean"
                    },
                    "moneyReceiptId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "mrCreationAllowed": {
                        "type": "boolean"
                    },
                    "netPremium": {
                        "type": "number",
                        "format": "double"
                    },
                    "oldCisDocumentNumber": {
                        "type": "string"
                    },
                    "oldCisDocumentNumberId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "originId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "othersCharge": {
                        "type": "number",
                        "format": "double"
                    },
                    "paymentStatus": {
                        "type": "string"
                    },
                    "policyDuration": {
                        "pattern": "\\bFULL|SHORT|PRORATA||\\b",
                        "type": "string"
                    },
                    "policyYear": {
                        "type": "string"
                    },
                    "producerId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "producerPf": {
                        "type": "string"
                    },
                    "referenceId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "reviewRemarks": {
                        "type": "string"
                    },
                    "serialNo": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "serviceCharge": {
                        "type": "number",
                        "format": "double"
                    },
                    "serviceProviderId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "serviceProviderPf": {
                        "type": "string"
                    },
                    "shortPeriodDays": {
                        "type": "number",
                        "format": "double"
                    },
                    "shortProrataPercentage": {
                        "type": "number",
                        "format": "double"
                    },
                    "stampAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "stampDutyType": {
                        "type": "string"
                    },
                    "stampRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "stampType": {
                        "type": "string"
                    },
                    "standingCharges": {
                        "type": "number",
                        "format": "double"
                    },
                    "subDepartment": {
                        "type": "string"
                    },
                    "subModuleId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "subSectorCode": {
                        "type": "string"
                    },
                    "sumInsured": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalDays": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalMonth": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "underwritingRemainingPremium": {
                        "type": "number",
                        "format": "double"
                    },
                    "vatAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "vatApplicableAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "vatExemptedApprovalStatus": {
                        "type": "string"
                    },
                    "vatNonApplicableAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "vatNonApplicableStatus": {
                        "type": "string"
                    },
                    "vatRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "vatType": {
                        "type": "string"
                    },
                    "voluntaryDeductibles": {
                        "type": "string"
                    }
                }
            },
            "Get Product List Response": {
                "title": "Get Product List Response",
                "type": "object",
                "properties": {
                    "getQuotationPrerequisite": {
                        "description": "Quotation pre requsite reponse",
                        "$ref": "#/components/schemas/Quotation Prerequsite Response"
                    },
                    "productList": {
                        "type": "array",
                        "description": "Product List",
                        "items": {
                            "$ref": "#/components/schemas/Aggregator Products List"
                        }
                    }
                }
            },
            "Get Quotation Request Body": {
                "title": "Get Quotation Request Body",
                "type": "object",
                "properties": {
                    "customerInfo": {
                        "description": "Customer information",
                        "$ref": "#/components/schemas/Customer Information"
                    },
                    "policyEndDate": {
                        "type": "string",
                        "description": "Validity end date of the document",
                        "format": "date",
                        "example": "2024-08-08T00:00:00.000+00:00"
                    },
                    "policyStartDate": {
                        "type": "string",
                        "description": "Validity start date of the document",
                        "format": "date",
                        "example": "2023-08-09T00:00:00.000+00:00"
                    },
                    "productCode": {
                        "pattern": "\\bNIBEDITA_ECO|NIBEDITA_REGULAR|NIBEDITA_PLUS|NIBEDITA_ORBIT|PAC|PPA|MTR|BNH|ENS\\b",
                        "type": "string",
                        "description": "Product code",
                        "example": "NIB"
                    },
                    "productSpecificInfo": {
                        "description": "Product-specific information",
                        "$ref": "#/components/schemas/Product Specific Information"
                    },
                    "sumInsured": {
                        "type": "integer",
                        "description": "Sum insured amount",
                        "format": "int32"
                    }
                }
            },
            "Get Quotation Response": {
                "title": "Get Quotation Response",
                "type": "object",
                "properties": {
                    "discountAmount": {
                        "type": "number",
                        "description": "Discount amount",
                        "format": "double",
                        "example": 0
                    },
                    "forDataSave": {
                        "type": "object",
                        "description": "Data for saving purposes"
                    },
                    "forDataSavePrerequisite": {
                        "description": "Prerequisite fields for data savings both text fields and dropdown. Not related with quotation getting, but need when save the document.",
                        "$ref": "#/components/schemas/Data Save Prerequisite"
                    },
                    "grossPremium": {
                        "type": "number",
                        "description": "Gross premium amount",
                        "format": "double",
                        "example": 10485
                    },
                    "netPremium": {
                        "type": "number",
                        "description": "Net premium amount",
                        "format": "double",
                        "example": 9100
                    },
                    "policyValidFrom": {
                        "type": "string",
                        "description": "Policy valid from date",
                        "format": "date",
                        "example": "2023-10-24T00:00:00.000+00:00"
                    },
                    "policyValidTo": {
                        "type": "string",
                        "description": "Policy valid to date",
                        "format": "date",
                        "example": "2024-10-23T00:00:00.000+00:00"
                    },
                    "stampAmount": {
                        "type": "number",
                        "description": "Stamp amount",
                        "format": "double",
                        "example": 20
                    },
                    "vatAmount": {
                        "type": "number",
                        "description": "VAT amount",
                        "format": "double",
                        "example": 1365
                    }
                },
                "description": "Get Quotation Response"
            },
            "InstallmentNumberVm": {
                "title": "InstallmentNumberVm",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Logged in User Infomation": {
                "title": "Logged in User Infomation",
                "required": [
                    "employeeId",
                    "name",
                    "role"
                ],
                "type": "object",
                "properties": {
                    "branchCode": {
                        "type": "string",
                        "description": "Branch Code (Predefined 3 digits system value)",
                        "example": "RSG, GLN, MKH etc"
                    },
                    "clientCode": {
                        "type": "string",
                        "description": "Client Code of the Organization (Aggregator)",
                        "example": "BRAC, MTB, EBL etc"
                    },
                    "designation": {
                        "type": "string",
                        "description": "Designation of the logged in user",
                        "example": "Software Engineer, Manager etc."
                    },
                    "employeeId": {
                        "type": "string",
                        "description": "Employee ID of the logged in user",
                        "example": "EMP123, EMP455 etc."
                    },
                    "mobile": {
                        "type": "string",
                        "description": "Mobile Number of the logged in user"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Organization/User",
                        "example": "BRAC Bank PLC, Mutual Trust Bank PLC etc."
                    },
                    "role": {
                        "type": "string",
                        "description": "Role of the logged in user",
                        "example": "Manager, RM, Sales"
                    }
                }
            },
            "MTR (Motor) Quotation Pre-Requsite Response": {
                "title": "MTR (Motor) Quotation Pre-Requsite Response",
                "type": "object",
                "properties": {
                    "motorBrandNameList": {
                        "type": "array",
                        "description": "MTR Brand list",
                        "items": {
                            "$ref": "#/components/schemas/MTR Vehicle Brand Names"
                        }
                    },
                    "motorCCNames": {
                        "type": "array",
                        "description": "Motor CC Names",
                        "items": {
                            "$ref": "#/components/schemas/MTR CC Names"
                        }
                    },
                    "motorPlanTypes": {
                        "type": "array",
                        "description": "Motor Plan Types",
                        "items": {
                            "$ref": "#/components/schemas/MTR Plan Type"
                        }
                    },
                    "mtrPerilExclusion": {
                        "type": "array",
                        "description": "MTR Peril Exculation",
                        "items": {
                            "$ref": "#/components/schemas/MTR Peril Exclusion"
                        }
                    },
                    "mtrTermsOfUse": {
                        "type": "array",
                        "description": "MTR Terms of Use",
                        "items": {
                            "$ref": "#/components/schemas/MTR Terms Of Use"
                        }
                    },
                    "mtrVehicleList": {
                        "type": "array",
                        "description": "Motor Vehicle List",
                        "items": {
                            "$ref": "#/components/schemas/MTR Vehicle Name"
                        }
                    },
                    "vehicleTypes": {
                        "type": "array",
                        "description": "Motor Vehicle Types",
                        "items": {
                            "$ref": "#/components/schemas/MTR Vehicle Type"
                        }
                    }
                }
            },
            "MTR CC Names": {
                "title": "MTR CC Names",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the Element"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value value of the Element"
                    }
                }
            },
            "MTR Peril Exclusion": {
                "title": "MTR Peril Exclusion",
                "type": "object",
                "properties": {
                    "classCode": {
                        "type": "string",
                        "description": "Class Code (Predefined System 3 Digit Class Code)",
                        "example": "MTR"
                    },
                    "deptCode": {
                        "type": "string",
                        "description": "Department code (Predefined System Dept Code)",
                        "example": "MTR"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Auto incremental id",
                        "format": "int64"
                    },
                    "perilCode": {
                        "type": "string",
                        "description": "Peril Code (Predefined System Peril Code)",
                        "example": "EQ (F & S), FLD & CYC etc."
                    },
                    "perilName": {
                        "type": "string",
                        "description": "Peril Name (Predefined System Peril Name)",
                        "example": "Flood And Cyclone, Earthquake etc."
                    }
                }
            },
            "MTR Plan Type": {
                "title": "MTR Plan Type",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the Element"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value value of the Element"
                    }
                }
            },
            "MTR Terms Of Use": {
                "title": "MTR Terms Of Use",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Auto Incremental Id",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Element"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value value of the Element"
                    }
                }
            },
            "MTR Vehicle Brand Names": {
                "title": "MTR Vehicle Brand Names",
                "type": "object",
                "properties": {
                    "brandCode": {
                        "type": "string",
                        "description": "Vehicle Brand Code"
                    },
                    "brandName": {
                        "type": "string",
                        "description": "Vehicle Brand Name"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Auto Incremental Id",
                        "format": "int64"
                    }
                }
            },
            "MTR Vehicle Name": {
                "title": "MTR Vehicle Name",
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of the Vehicle"
                    },
                    "vehicleName": {
                        "type": "string",
                        "description": "Descriptive name of the Vechile"
                    }
                }
            },
            "MTR Vehicle Type": {
                "title": "MTR Vehicle Type",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the Element"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value value of the Element"
                    }
                }
            },
            "MasterDocResponseVm": {
                "title": "MasterDocResponseVm",
                "type": "object",
                "properties": {
                    "agentInfo": {
                        "$ref": "#/components/schemas/ComAgentInfoVm"
                    },
                    "amendmentCauseCode": {
                        "type": "string"
                    },
                    "amendmentCauseValue": {
                        "type": "string"
                    },
                    "amendmentPremiumMode": {
                        "type": "string"
                    },
                    "amendmentSumInsuredType": {
                        "type": "string"
                    },
                    "amendmentType": {
                        "type": "string"
                    },
                    "approvalStatus": {
                        "type": "string"
                    },
                    "approvedAt": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "approvedBy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "approvedByName": {
                        "type": "string"
                    },
                    "authorizedPerson": {
                        "$ref": "#/components/schemas/DocEmployeeVm"
                    },
                    "body1": {
                        "type": "string"
                    },
                    "body2": {
                        "type": "string"
                    },
                    "branch": {
                        "$ref": "#/components/schemas/ComBranchVm"
                    },
                    "businessSector": {
                        "$ref": "#/components/schemas/BusinessSectorSubsectorVm"
                    },
                    "businessSectorSubsector": {
                        "$ref": "#/components/schemas/BusinessSectorSubsectorVm"
                    },
                    "businessSource": {
                        "type": "string"
                    },
                    "businessStatus": {
                        "type": "string"
                    },
                    "businessType": {
                        "type": "string"
                    },
                    "createdAt": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "createdBy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "createdByName": {
                        "type": "string"
                    },
                    "currencyRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "currencyType": {
                        "type": "string"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/ComCustomerViewModel"
                    },
                    "customerName": {
                        "type": "string"
                    },
                    "declarationAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "declarationRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "declarationType": {
                        "type": "string"
                    },
                    "discountAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "discountRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "discountType": {
                        "type": "string"
                    },
                    "docMiscHealthDetailsVm": {
                        "$ref": "#/components/schemas/DocMiscHealthDetailsVm"
                    },
                    "docMotorDetailsVm": {
                        "$ref": "#/components/schemas/DocMotorDetailsVm"
                    },
                    "docTravelDetailsVm": {
                        "$ref": "#/components/schemas/DocTravelDetailsVm"
                    },
                    "documentDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "documentNumber": {
                        "type": "string"
                    },
                    "documentNumberSuffix": {
                        "type": "string"
                    },
                    "documentSerialNo": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "documentStatus": {
                        "type": "string"
                    },
                    "documentType": {
                        "type": "string"
                    },
                    "documentValidFrom": {
                        "type": "string",
                        "format": "date"
                    },
                    "documentValidTo": {
                        "type": "string",
                        "format": "date"
                    },
                    "grossPremium": {
                        "type": "number",
                        "format": "double"
                    },
                    "hasBgDp": {
                        "type": "boolean"
                    },
                    "hasClause": {
                        "type": "boolean"
                    },
                    "hasCoInsurance": {
                        "type": "boolean"
                    },
                    "hasDiscount": {
                        "type": "boolean"
                    },
                    "hasMortgage": {
                        "type": "boolean"
                    },
                    "hasMultipleMoneyReceipt": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "hasSpecialClause": {
                        "type": "boolean"
                    },
                    "hasSpecialRisk": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "insuranceType": {
                        "type": "string"
                    },
                    "insuredAddress": {
                        "type": "string"
                    },
                    "interestList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocInterestVm"
                        }
                    },
                    "introducer": {
                        "$ref": "#/components/schemas/DocEmployeeVm"
                    },
                    "isConvertedDocument": {
                        "type": "boolean"
                    },
                    "isDeclaration": {
                        "type": "boolean"
                    },
                    "isDocumentPrintAllow": {
                        "type": "boolean"
                    },
                    "isGdicLeader": {
                        "type": "boolean"
                    },
                    "isMixedVat": {
                        "type": "boolean"
                    },
                    "isRefund": {
                        "type": "boolean"
                    },
                    "isStampRecoverable": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isVatExempted": {
                        "type": "boolean"
                    },
                    "modifiedAt": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "modifiedBy": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "modifiedByName": {
                        "type": "string"
                    },
                    "netPremium": {
                        "type": "number",
                        "format": "double"
                    },
                    "oldCisDocVm": {
                        "$ref": "#/components/schemas/ComOldCisDocVm"
                    },
                    "oldCisDocumentNumber": {
                        "type": "string"
                    },
                    "othersCharge": {
                        "type": "number",
                        "format": "double"
                    },
                    "perilPremium": {
                        "type": "number",
                        "format": "double"
                    },
                    "policyDuration": {
                        "type": "string"
                    },
                    "producer": {
                        "$ref": "#/components/schemas/DocEmployeeVm"
                    },
                    "product": {
                        "$ref": "#/components/schemas/UsrProdSubModuleDepartmentViewModel"
                    },
                    "refDocBgDpNumber": {
                        "type": "string"
                    },
                    "reviewRemarks": {
                        "type": "string"
                    },
                    "securityCode": {
                        "type": "string"
                    },
                    "selected": {
                        "type": "boolean"
                    },
                    "serviceCharge": {
                        "type": "number",
                        "format": "double"
                    },
                    "serviceProvider": {
                        "$ref": "#/components/schemas/DocEmployeeVm"
                    },
                    "serviceProviderFullname": {
                        "type": "string"
                    },
                    "serviceProviderPf": {
                        "type": "string"
                    },
                    "shortPeriodDays": {
                        "type": "number",
                        "format": "double"
                    },
                    "shortProrataPercentage": {
                        "type": "number",
                        "format": "double"
                    },
                    "stampAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "stampDutyType": {
                        "type": "string"
                    },
                    "stampRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "stampType": {
                        "type": "string"
                    },
                    "sumInsured": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalDays": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalMonth": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "vatAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "vatApplicableAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "vatExemptedApprovalStatus": {
                        "type": "string"
                    },
                    "vatNonApplicableAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "vatNonApplicableStatus": {
                        "type": "string"
                    },
                    "vatRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "vatType": {
                        "type": "string"
                    }
                }
            },
            "MiddlewareSearchDocVm": {
                "title": "MiddlewareSearchDocVm",
                "required": [
                    "approvalStatus",
                    "productCode",
                    "searchText"
                ],
                "type": "object",
                "properties": {
                    "approvalStatus": {
                        "pattern": "\\bDRAFT|FINAL|APPROVE||\\b",
                        "type": "string"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "fromDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "productCode": {
                        "pattern": "\\bPAC|PPA|NIB|MTR|B&H|E&S||\\b",
                        "type": "string"
                    },
                    "searchText": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Motor": {
                "title": "Motor",
                "type": "object",
                "properties": {
                    "avlsDiscount": {
                        "type": "boolean",
                        "description": "Whether AVLs discount is available",
                        "example": true
                    },
                    "comprehensiveRate": {
                        "type": "number",
                        "description": "Comprehensive rate",
                        "format": "double",
                        "example": 0
                    },
                    "customerId": {
                        "type": "integer",
                        "description": "Customer ID",
                        "format": "int32",
                        "example": 70734
                    },
                    "exclusionPerilList": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "fitnessExpiryDate": {
                        "type": "string",
                        "description": "Fitness expiry date",
                        "example": "2023-07-19"
                    },
                    "loadingRate": {
                        "type": "number",
                        "description": "Loading rate",
                        "format": "double",
                        "example": 0
                    },
                    "lumpSumAmount": {
                        "type": "integer",
                        "description": "Lump sum amount",
                        "format": "int64",
                        "example": 0
                    },
                    "manufactureYear": {
                        "type": "string",
                        "description": "Manufacture year",
                        "example": "2019"
                    },
                    "motorTermsOfUseId": {
                        "type": "integer",
                        "description": "Motor terms of use ID",
                        "format": "int32",
                        "example": 1
                    },
                    "mtrCcTon": {
                        "type": "string",
                        "description": "MTR CC ton type (CC or Ton)",
                        "example": "CC"
                    },
                    "mtrCcTonValue": {
                        "type": "number",
                        "description": "MTR CC ton value (if vehicle is measured in CC then CC value or measured with TON then TON value)",
                        "format": "double",
                        "example": 200
                    },
                    "mtrConductorAmount": {
                        "type": "number",
                        "description": "Conductor amount",
                        "format": "double",
                        "example": 0
                    },
                    "mtrConductorRate": {
                        "type": "number",
                        "description": "Conductor rate",
                        "format": "double",
                        "example": 0
                    },
                    "mtrDriverTimesMultiply": {
                        "type": "integer",
                        "description": "Multiplier for driver count",
                        "format": "int32",
                        "example": 1
                    },
                    "mtrGuideAmount": {
                        "type": "number",
                        "description": "Guide amount",
                        "format": "double",
                        "example": 0
                    },
                    "mtrGuideRate": {
                        "type": "number",
                        "description": "Guide rate",
                        "format": "double",
                        "example": 0
                    },
                    "mtrHelperTimesMultiply": {
                        "type": "integer",
                        "description": "Multiplier for helper count",
                        "format": "int32",
                        "example": 1
                    },
                    "mtrNoOfConductor": {
                        "type": "integer",
                        "description": "Number of conductors",
                        "format": "int32"
                    },
                    "mtrNoOfDriver": {
                        "type": "integer",
                        "description": "Number of drivers",
                        "format": "int32"
                    },
                    "mtrNoOfGuide": {
                        "type": "integer",
                        "description": "Number of guides",
                        "format": "int32"
                    },
                    "mtrNoOfHelper": {
                        "type": "integer",
                        "description": "Number of helpers",
                        "format": "int32"
                    },
                    "mtrNoOfPassenger": {
                        "type": "integer",
                        "description": "Number of passengers",
                        "format": "int32",
                        "example": 1
                    },
                    "mtrPassengerTimesMultiply": {
                        "type": "integer",
                        "description": "Multiplier for passenger count",
                        "format": "int32",
                        "example": 1
                    },
                    "mtrPlanName": {
                        "type": "string",
                        "description": "MTR plan name",
                        "example": "Comprehensive"
                    },
                    "mtrVehicleId": {
                        "type": "integer",
                        "description": "MTR vehicle ID",
                        "format": "int64",
                        "example": 1
                    },
                    "mtrVehicleType": {
                        "type": "string",
                        "description": "MTR vehicle type",
                        "example": "Private"
                    },
                    "namedDriver": {
                        "type": "boolean",
                        "description": "Whether named driver is available",
                        "example": false
                    },
                    "ncbRate": {
                        "type": "number",
                        "description": "No Claim Bonus rate",
                        "format": "double",
                        "example": 0
                    },
                    "oppositePurposeUseLoading": {
                        "type": "boolean",
                        "description": "Whether loading is applicable for opposite purpose use",
                        "example": true
                    },
                    "policyDuration": {
                        "type": "string",
                        "description": "Policy duration (short or full)",
                        "example": "full"
                    },
                    "stampAmount": {
                        "type": "number",
                        "description": "Stamp amount",
                        "format": "double",
                        "example": 500
                    },
                    "stampDutyType": {
                        "type": "string",
                        "description": "Stamp duty type (Recoverable or Non-Recoverable)",
                        "example": "Non-Recoverable"
                    },
                    "sumInsured": {
                        "type": "integer",
                        "description": "Sum insured amount",
                        "format": "int32",
                        "example": 2000000
                    },
                    "taxFreeVehicle": {
                        "type": "boolean",
                        "description": "Whether the vehicle is tax-free",
                        "example": true
                    },
                    "taxToken": {
                        "type": "string",
                        "description": "Tax token number",
                        "example": "3425345"
                    },
                    "techometerVehicle": {
                        "type": "boolean",
                        "description": "Whether the vehicle has a tachometer",
                        "example": true
                    },
                    "totalDays": {
                        "type": "integer",
                        "description": "Total days for policy",
                        "format": "int32",
                        "example": 365
                    },
                    "vatRate": {
                        "type": "number",
                        "description": "VAT rate",
                        "format": "double",
                        "example": 15
                    },
                    "vehicleRegistrationNumber": {
                        "type": "string",
                        "description": "Vehicle registration number",
                        "example": "323425"
                    }
                }
            },
            "Motor Details": {
                "title": "Motor Details",
                "type": "object",
                "properties": {
                    "companyOrModelName": {
                        "type": "string",
                        "description": "Company or Model Name of the vehicle"
                    },
                    "fitnessExpiryDate": {
                        "type": "string",
                        "description": "Fitness Expiry Date of the vehicle"
                    },
                    "manufactureYear": {
                        "type": "string",
                        "description": "Manufacture Year of the vehicle"
                    },
                    "manufacturer": {
                        "type": "string",
                        "description": "Manufacturer name of the vehicle"
                    },
                    "motorEngineAndChassisNumber": {
                        "type": "string",
                        "description": "Motor Engine and Chassis Number"
                    },
                    "motorMakeAndBodyType": {
                        "type": "string",
                        "description": "Motor Make and Body Type of the vehicle"
                    },
                    "motorModelNumber": {
                        "type": "string",
                        "description": "Motor/Vehicle Model Number"
                    },
                    "motorRegistrationNumber": {
                        "type": "string",
                        "description": "Registration number of the vehicle"
                    },
                    "motorTermsOfUseId": {
                        "type": "integer",
                        "description": "Motor Terms of Use ID (System Defined ID)",
                        "format": "int64"
                    },
                    "mtrCCTon": {
                        "type": "string",
                        "description": "Vechicle is measured in CC or TON"
                    },
                    "mtrCcTonValue": {
                        "type": "number",
                        "description": "Vehicle CC or TON value",
                        "format": "double"
                    },
                    "mtrPlanName": {
                        "type": "string",
                        "description": "Plan Name (Predefined System Configuration Data)"
                    },
                    "mtrVehicleType": {
                        "type": "string",
                        "description": "Vehicle Type (Private or Organization)"
                    },
                    "nameOfRegistrationAuthority": {
                        "type": "string",
                        "description": "Name of Registration Authority"
                    },
                    "nameOfTheVechile": {
                        "type": "string",
                        "description": "Name of the Vehicle"
                    },
                    "taxToken": {
                        "type": "string",
                        "description": "Tax Token of the vehicle"
                    }
                }
            },
            "Motor Prerequisite For Data Save": {
                "title": "Motor Prerequisite For Data Save",
                "type": "object",
                "properties": {
                    "textFields": {
                        "type": "array",
                        "description": "Prerequisite text fields to save the document policy.",
                        "items": {
                            "$ref": "#/components/schemas/Motor Related text fields"
                        }
                    }
                },
                "description": "Motor Prerequisite For Data Save"
            },
            "Motor Quotation Prerequisite Details": {
                "title": "Motor Quotation Prerequisite Details",
                "type": "object",
                "properties": {
                    "dropdowns": {
                        "description": "Dropdown values for Motor",
                        "$ref": "#/components/schemas/MTR (Motor) Quotation Pre-Requsite Response"
                    },
                    "textFields": {
                        "type": "array",
                        "description": "Common text fields array with type and description",
                        "items": {
                            "$ref": "#/components/schemas/Common text field description"
                        }
                    }
                }
            },
            "Motor Related text fields": {
                "title": "Motor Related text fields",
                "type": "object",
                "properties": {
                    "descriptions": {
                        "type": "string",
                        "description": "Description of the text field."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the field.",
                        "example": "motorEngineAndChassisNumber, motorMakeAndBodyType, manufactureYear, motorModelNumber, taxToken, fitnessExpiryDate, manufacturer, companyOrModelName, motorTermsOfUseId"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Indicated whether the field is mandatory to give or not.",
                        "example": false
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the field.",
                        "example": "String, int, float, boolean"
                    }
                },
                "description": "Motor Related text fields"
            },
            "Nibedita Details": {
                "title": "Nibedita Details",
                "type": "object",
                "properties": {
                    "construction": {
                        "type": "string",
                        "description": "Customer Construction"
                    },
                    "nomineeDetails": {
                        "type": "array",
                        "description": "Nominee Details",
                        "items": {
                            "$ref": "#/components/schemas/NomineeDetails"
                        }
                    },
                    "occupation": {
                        "type": "string",
                        "description": "Customer Occupation"
                    }
                }
            },
            "Nibedita Dropdown Details": {
                "title": "Nibedita Dropdown Details",
                "type": "object",
                "properties": {
                    "productList": {
                        "type": "array",
                        "description": "Product list for Nibedita",
                        "items": {
                            "$ref": "#/components/schemas/Nibedita Product Sum-Insured Details"
                        }
                    }
                }
            },
            "Nibedita Prerequisite For Data Save": {
                "title": "Nibedita Prerequisite For Data Save",
                "type": "object",
                "properties": {
                    "textFields": {
                        "type": "array",
                        "description": "Prerequisite text fields to save the document policy.",
                        "items": {
                            "$ref": "#/components/schemas/Nibedita text fields for Data Save"
                        }
                    }
                },
                "description": "Nibedita Prerequisite For Data Save"
            },
            "Nibedita Product Sum-Insured Details": {
                "title": "Nibedita Product Sum-Insured Details",
                "type": "object",
                "properties": {
                    "productCode": {
                        "type": "string",
                        "description": "Product Code (System Predefined Code)",
                        "example": "NIBEDITA_ORBIT, NIBEDITA_ECHO etc"
                    },
                    "productName": {
                        "type": "string",
                        "description": "Product Name (System Predefined Name)",
                        "example": "NIBEDITA ORBIT, NIBEDITA ECHO etc."
                    },
                    "sumInsuredList": {
                        "type": "array",
                        "description": "Product Sum-Insured List",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            },
            "Nibedita Quotation Prerequisite": {
                "title": "Nibedita Quotation Prerequisite",
                "type": "object",
                "properties": {
                    "dropdowns": {
                        "description": "Dropdown values for Nibedita",
                        "$ref": "#/components/schemas/Nibedita Dropdown Details"
                    },
                    "textFields": {
                        "type": "array",
                        "description": "Common text fields array with type and description",
                        "items": {
                            "$ref": "#/components/schemas/Common text field description"
                        }
                    }
                }
            },
            "Nibedita text fields for Data Save": {
                "title": "Nibedita text fields for Data Save",
                "type": "object",
                "properties": {
                    "descriptions": {
                        "type": "string",
                        "description": "Description of the text field."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the field.",
                        "example": "occupation, construction"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Indicated whether the field is mandatory to give or not.",
                        "example": false
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the field.",
                        "example": "String, int, float, boolean"
                    }
                },
                "description": "Nibedita text fields for Data Save"
            },
            "NomineeDetails": {
                "title": "NomineeDetails",
                "required": [
                    "nomineeAddress",
                    "nomineeDateOfBirth",
                    "nomineeEmail",
                    "nomineeMobile",
                    "nomineeName",
                    "nomineeNid",
                    "nomineeRelation",
                    "nomineeSharePct"
                ],
                "type": "object",
                "properties": {
                    "nomineeAddress": {
                        "type": "string",
                        "description": "Nominee Address",
                        "example": "123 Main St, City"
                    },
                    "nomineeDateOfBirth": {
                        "type": "string",
                        "description": "Nominee Date of Birth",
                        "example": "2023-12-25"
                    },
                    "nomineeEmail": {
                        "type": "string",
                        "description": "Nominee Valid Email Address",
                        "example": "nominee@example.com"
                    },
                    "nomineeMobile": {
                        "type": "string",
                        "description": "Nominee Mobile Number",
                        "example": "0123456789"
                    },
                    "nomineeName": {
                        "type": "string",
                        "description": "Nominee Name",
                        "example": "John Doe"
                    },
                    "nomineeNid": {
                        "type": "string",
                        "description": "Nominee NID",
                        "example": "1234567890"
                    },
                    "nomineeRelation": {
                        "type": "string",
                        "description": "Nominee Relation with the customer/client",
                        "example": "Spouse"
                    },
                    "nomineeSharePct": {
                        "type": "number",
                        "description": "Nominee Share Percentage",
                        "format": "double",
                        "example": 50
                    }
                },
                "description": "Nominee Details"
            },
            "PaymentModeVm": {
                "title": "PaymentModeVm",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "PaymentTypeVm": {
                "title": "PaymentTypeVm",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "People's Personal Accident Details": {
                "title": "People's Personal Accident Details",
                "type": "object",
                "properties": {
                    "construction": {
                        "type": "string",
                        "description": "Customer Construction"
                    },
                    "nomineeDetails": {
                        "type": "array",
                        "description": "Nominee Details",
                        "items": {
                            "$ref": "#/components/schemas/NomineeDetails"
                        }
                    },
                    "occupation": {
                        "type": "string",
                        "description": "Customer Occupation"
                    }
                }
            },
            "People's Personal Accident Related text fields for Data Save": {
                "title": "People's Personal Accident Related text fields for Data Save",
                "type": "object",
                "properties": {
                    "descriptions": {
                        "type": "string",
                        "description": "Description of the text field."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the field.",
                        "example": "occupation, construction"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Indicated whether the field is mandatory to give or not.",
                        "example": false
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the field.",
                        "example": "String, int, float, boolean"
                    }
                },
                "description": "People's Personal Accident Related text fields for Data Save"
            },
            "Personal Accident": {
                "title": "Personal Accident",
                "type": "object",
                "properties": {
                    "pacClassTypeCode": {
                        "type": "string",
                        "description": "PAC class type code, A (Table-A), B(Table-B), C(Table-C)",
                        "example": "A, B, C"
                    },
                    "pacCoverTypeCode": {
                        "type": "string",
                        "description": "PAC cover type code",
                        "example": "A, AA, B, C"
                    }
                }
            },
            "Personal Accident Prerequisite for Data Save": {
                "title": "Personal Accident Prerequisite for Data Save",
                "type": "object",
                "properties": {
                    "textFields": {
                        "type": "array",
                        "description": "Prerequisite text fields to save the document policy.",
                        "items": {
                            "$ref": "#/components/schemas/Personal Accident Related text fields for Data Save"
                        }
                    }
                },
                "description": "Personal Accident Prerequisite for Data Save"
            },
            "Personal Accident Related text fields for Data Save": {
                "title": "Personal Accident Related text fields for Data Save",
                "type": "object",
                "properties": {
                    "descriptions": {
                        "type": "string",
                        "description": "Description of the text field."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the field.",
                        "example": "occupation, construction"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Indicated whether the field is mandatory to give or not.",
                        "example": false
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the field.",
                        "example": "String, int, float, boolean"
                    }
                },
                "description": "Personal Accident Related text fields for Data Save"
            },
            "Place Visit Model": {
                "title": "Place Visit Model",
                "type": "object",
                "properties": {
                    "placeVisit": {
                        "type": "string",
                        "description": "Place Visit (descriptive with county)"
                    },
                    "placeVisitCode": {
                        "type": "string",
                        "description": "Place Visit Code (Predefined System Code)",
                        "example": "A, B, C etc."
                    }
                }
            },
            "Prerequisite for Data Save": {
                "title": "Prerequisite for Data Save",
                "type": "object",
                "properties": {
                    "textFields": {
                        "type": "array",
                        "description": "Prerequisite text fields to save the document policy.",
                        "items": {
                            "$ref": "#/components/schemas/People's Personal Accident Related text fields for Data Save"
                        }
                    }
                },
                "description": "Prerequisite for Data Save"
            },
            "Product Specific Information": {
                "title": "Product Specific Information",
                "type": "object",
                "properties": {
                    "bnh": {
                        "description": "BNH information",
                        "$ref": "#/components/schemas/Business And Holidays"
                    },
                    "ens": {
                        "description": "ENS information",
                        "$ref": "#/components/schemas/Employment And Studies"
                    },
                    "mtr": {
                        "description": "MTR information",
                        "$ref": "#/components/schemas/Motor"
                    },
                    "pac": {
                        "description": "PAC information",
                        "$ref": "#/components/schemas/Personal Accident"
                    }
                }
            },
            "Quotation Prerequsite Response": {
                "title": "Quotation Prerequsite Response",
                "type": "object",
                "properties": {
                    "bnh": {
                        "description": "Business and Holidays related prerequisite details",
                        "$ref": "#/components/schemas/Business and Holidays Quotation Prerequisite Details"
                    },
                    "ens": {
                        "description": "Employment and Studies related prerequisite details",
                        "$ref": "#/components/schemas/Employment and Studies Quotation Prerequisite Details"
                    },
                    "mtr": {
                        "description": "Motor related prerequisite details",
                        "$ref": "#/components/schemas/Motor Quotation Prerequisite Details"
                    },
                    "nib": {
                        "description": "Nibedita product related prerequisite details",
                        "$ref": "#/components/schemas/Nibedita Quotation Prerequisite"
                    }
                }
            },
            "RefundMrVm": {
                "title": "RefundMrVm",
                "type": "object",
                "properties": {
                    "branchCode": {
                        "type": "string"
                    },
                    "currencyRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "currencyType": {
                        "type": "string"
                    },
                    "currentBalance": {
                        "type": "number",
                        "format": "double"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "mrAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "mrDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "mrNumber": {
                        "type": "string"
                    },
                    "netPremium": {
                        "type": "number",
                        "format": "double"
                    },
                    "othersCharge": {
                        "type": "number",
                        "format": "double"
                    },
                    "refundDocumentNumber": {
                        "type": "string"
                    },
                    "refundStatus": {
                        "type": "string"
                    },
                    "serviceCharge": {
                        "type": "number",
                        "format": "double"
                    },
                    "stampAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "stampDutyType": {
                        "type": "string"
                    },
                    "stampRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "stampType": {
                        "type": "string"
                    },
                    "sumInsured": {
                        "type": "number",
                        "format": "double"
                    },
                    "vatAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "vatRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "vatType": {
                        "type": "string"
                    }
                }
            },
            "Remarks": {
                "title": "Remarks",
                "type": "object",
                "properties": {
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "success": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Save Master Document Response": {
                "title": "Save Master Document Response",
                "type": "object",
                "properties": {
                    "attachmentList": {
                        "type": "array",
                        "description": "List of attached files with the document",
                        "items": {
                            "type": "string"
                        }
                    },
                    "customerEmail": {
                        "type": "string",
                        "description": "Customer Email address",
                        "example": "customer@customer.com"
                    },
                    "docUrl": {
                        "type": "string",
                        "description": "PDF url of the saved document and money receipt",
                        "example": "https://cis-gdic.com/test/test/test"
                    },
                    "documentNumber": {
                        "type": "string",
                        "description": "Document Number",
                        "example": "GDI/AHO/01/2024/MTR/T/480001"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id of the saved document",
                        "format": "int64",
                        "example": 1234
                    },
                    "mrNumber": {
                        "type": "string",
                        "description": "Money Receipt Number",
                        "example": "57000001"
                    },
                    "previousDocumentNumber": {
                        "type": "string",
                        "description": "Previous document number",
                        "example": "GDI/AHO/01/2024/MTR/T/480001"
                    },
                    "previousReviewRemarks": {
                        "type": "string",
                        "description": "Previous document review remarks"
                    },
                    "previousSerialNumber": {
                        "type": "string",
                        "description": "Previous serial number of the document",
                        "example": "480001"
                    },
                    "previousSpecialBillReferenceNumber": {
                        "type": "string",
                        "description": "Previous special bill reference number"
                    },
                    "specialBillReferenceUpdateNeeded": {
                        "type": "boolean",
                        "description": "Special bill reference update/edit needed or not?",
                        "example": false
                    },
                    "updateNeeded": {
                        "type": "boolean",
                        "description": "Saved document needs any update/edit or not?",
                        "example": false
                    }
                }
            },
            "Search Customer Request Body": {
                "title": "Search Customer Request Body",
                "required": [
                    "customerType",
                    "searchText",
                    "searchType"
                ],
                "type": "object",
                "properties": {
                    "customerGroupCode": {
                        "type": "string",
                        "description": "Customer Group Code (if customerType is business then must provide customer group code otherwise optionl)",
                        "example": "UNILIVER, ISPAHANI"
                    },
                    "customerType": {
                        "type": "string",
                        "description": "Type of the Customer",
                        "example": "Personal, Business"
                    },
                    "searchText": {
                        "type": "string",
                        "description": "Keyword for search customer based on the selected searchType (if searchType is Mobile then searchText must be a valid mobile number)",
                        "example": "01711111111, 987654321"
                    },
                    "searchType": {
                        "type": "string",
                        "description": "Customer Search Type referes (Specific Selected Criteria) based on selected customerType. SearchType must be within the given example list as it is.",
                        "example": "For (PERSONAL -> nid, tin, birthRegNo, passportNo), (BUSINESS -> nid, tin, bin, mobileNo) one of these criteria must be selected."
                    }
                }
            },
            "SearchMasterDocumentResponse": {
                "title": "SearchMasterDocumentResponse",
                "type": "object",
                "properties": {
                    "masterDocList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FireMasterDocVm"
                        }
                    },
                    "pageCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "Sub Product Details Reponse": {
                "title": "Sub Product Details Reponse",
                "type": "object",
                "properties": {
                    "ageLimitInfo": {
                        "type": "string",
                        "description": "Age limit of the customer/client who are eligiable for this proudct",
                        "example": "16 years to 65 years"
                    },
                    "coverage": {
                        "type": "string",
                        "description": "Coverages of the product",
                        "example": "List of coverages"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the prouduct",
                        "example": "Some long text description of the prouduct"
                    },
                    "exclusion": {
                        "type": "string",
                        "description": "Product Execlution List",
                        "example": "List of exclusions"
                    },
                    "id": {
                        "type": "integer",
                        "description": "id of the product",
                        "format": "int64",
                        "example": 1
                    },
                    "keyFeature": {
                        "type": "string",
                        "description": "Key feature of the product",
                        "example": "List of key features"
                    },
                    "productCode": {
                        "type": "string",
                        "description": "product code",
                        "example": "NIB, ENS, MTR etc"
                    },
                    "productInfo": {
                        "type": "string",
                        "description": "Product Information",
                        "example": "NIBEDITA, BNH, ENS etc"
                    },
                    "productName": {
                        "type": "string",
                        "description": "Name of the Product",
                        "example": "Nibedita, Motor etc"
                    },
                    "sumInsuredInfo": {
                        "type": "string",
                        "description": "Range of sum-insured amount",
                        "example": "BDT 50000 to BDT 2000000"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title of the product",
                        "example": "Full length title of the proudct"
                    }
                }
            },
            "Timestamp": {
                "title": "Timestamp",
                "type": "object",
                "properties": {
                    "date": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "day": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "hours": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "month": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "nanos": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "seconds": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "time": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "timezoneOffset": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "year": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "UnderwritingResponseVm": {
                "title": "UnderwritingResponseVm",
                "required": [
                    "masterDoc"
                ],
                "type": "object",
                "properties": {
                    "attachedCustomerContactMobileNo": {
                        "type": "string"
                    },
                    "clauseList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ClauseResponseVm"
                        }
                    },
                    "customerContactList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocCustomerContactVm"
                        }
                    },
                    "docFileList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocFilesResponseVm"
                        }
                    },
                    "interestList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocInterestVm"
                        }
                    },
                    "isGdicLeader": {
                        "type": "boolean"
                    },
                    "masterDoc": {
                        "$ref": "#/components/schemas/MasterDocResponseVm"
                    },
                    "moneyReceiptList": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccMoneyReceiptVm"
                        }
                    },
                    "mrAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "mrCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "netPremiumCoInsurer": {
                        "type": "number",
                        "format": "double"
                    },
                    "netPremiumGdic": {
                        "type": "number",
                        "format": "double"
                    },
                    "othersCharge": {
                        "type": "number",
                        "format": "double"
                    },
                    "serviceCharge": {
                        "type": "number",
                        "format": "double"
                    },
                    "specialClauseList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ClauseResponseVm"
                        }
                    },
                    "stampAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "underwritingRemainingPremium": {
                        "type": "number",
                        "format": "double"
                    },
                    "vatAmount": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "User Authentication Request": {
                "title": "User Authentication Request",
                "required": [
                    "password",
                    "platform",
                    "source",
                    "username"
                ],
                "type": "object",
                "properties": {
                    "password": {
                        "maxLength": 2147483647,
                        "minLength": 8,
                        "type": "string",
                        "description": "password of an individual user",
                        "example": "12345678"
                    },
                    "platform": {
                        "pattern": "\\bWEB|APP\\b",
                        "type": "string",
                        "description": "Platform from which the request is being generated (e.g., WEB, APP)",
                        "enum": [
                            "APP",
                            "WEB"
                        ]
                    },
                    "source": {
                        "type": "string",
                        "description": "Source of authentication (e.g., EBL, ROBI, BRAC, MTR)",
                        "enum": [
                            "BRAC",
                            "EBL",
                            "MTB",
                            "ROBI"
                        ]
                    },
                    "username": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string",
                        "description": "username of an individual user",
                        "example": "19255"
                    }
                }
            },
            "User Authentication Response After Successfull Authentication": {
                "title": "User Authentication Response After Successfull Authentication",
                "type": "object",
                "properties": {
                    "accessToken": {
                        "type": "string",
                        "description": "Access Token, which will be necessary for making further request almost everytime to validate authorization and security.",
                        "example": "eyJraWQiOiJlOWNjZDMyYcFgU6PAHo3-9RkODkzNDMi"
                    },
                    "expiresIn": {
                        "type": "string",
                        "description": "Time in seconds until the token expires",
                        "example": "2023-11-09 17:02:32.041"
                    },
                    "idToken": {
                        "type": "string",
                        "description": "ID Token provides identity information about the authenticated user.",
                        "example": "eyJraWQiOiJlOWNjZDMyYcFgU6PAHo3-9RkODkzNDMi"
                    },
                    "refreshToken": {
                        "type": "string",
                        "description": "Refresh Token, which is required for getting new Access Token when current access token expires.",
                        "example": "eyJraWQiOiJlOWNjZDMyYcFgU6PAHo3-9RkODkzNDMi"
                    },
                    "remarks": {
                        "type": "array",
                        "description": "List of remarks",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scope": {
                        "type": "string",
                        "description": "Scope of token, what user is allowed to perform."
                    },
                    "timestamp": {
                        "type": "string",
                        "description": "Time and date of the execution",
                        "example": "2023-11-09 17:02:32.041"
                    },
                    "tokenType": {
                        "type": "string",
                        "description": "Token Type",
                        "example": "Bearer "
                    }
                }
            },
            "UsrProdSubModuleDepartmentViewModel": {
                "title": "UsrProdSubModuleDepartmentViewModel",
                "type": "object",
                "properties": {
                    "classCode": {
                        "type": "string"
                    },
                    "deptCode": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        }
    }
}